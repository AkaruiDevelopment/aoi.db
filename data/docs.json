{
	"id": 0,
	"name": "@akarui/aoi.db",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 7,
			"name": "CacheType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 12,
					"name": "FIFO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 6,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L6"
						}
					],
					"type": {
						"type": "literal",
						"value": 4
					}
				},
				{
					"id": 13,
					"name": "FILO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 7,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L7"
						}
					],
					"type": {
						"type": "literal",
						"value": 5
					}
				},
				{
					"id": 10,
					"name": "LFU",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 4,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L4"
						}
					],
					"type": {
						"type": "literal",
						"value": 2
					}
				},
				{
					"id": 8,
					"name": "LRU",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 2,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L2"
						}
					],
					"type": {
						"type": "literal",
						"value": 0
					}
				},
				{
					"id": 11,
					"name": "MFU",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 5,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L5"
						}
					],
					"type": {
						"type": "literal",
						"value": 3
					}
				},
				{
					"id": 9,
					"name": "MRU",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 3,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L3"
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						12,
						13,
						10,
						8,
						11,
						9
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/typings/enum.ts",
					"line": 1,
					"character": 12,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L1"
				}
			]
		},
		{
			"id": 27,
			"name": "DatabaseEvents",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 36,
					"name": "Backup",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 43,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L43"
						}
					],
					"type": {
						"type": "literal",
						"value": "backup"
					}
				},
				{
					"id": 34,
					"name": "Clear",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 41,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L41"
						}
					],
					"type": {
						"type": "literal",
						"value": "clear"
					}
				},
				{
					"id": 28,
					"name": "Connect",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 35,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L35"
						}
					],
					"type": {
						"type": "literal",
						"value": "connect"
					}
				},
				{
					"id": 40,
					"name": "Debug",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 47,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L47"
						}
					],
					"type": {
						"type": "literal",
						"value": "debug"
					}
				},
				{
					"id": 32,
					"name": "Delete",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 39,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L39"
						}
					],
					"type": {
						"type": "literal",
						"value": "delete"
					}
				},
				{
					"id": 38,
					"name": "Disconnect",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 45,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L45"
						}
					],
					"type": {
						"type": "literal",
						"value": "disconnect"
					}
				},
				{
					"id": 29,
					"name": "Error",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 36,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L36"
						}
					],
					"type": {
						"type": "literal",
						"value": "error"
					}
				},
				{
					"id": 33,
					"name": "Flush",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 40,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L40"
						}
					],
					"type": {
						"type": "literal",
						"value": "flush"
					}
				},
				{
					"id": 31,
					"name": "Get",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 38,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L38"
						}
					],
					"type": {
						"type": "literal",
						"value": "get"
					}
				},
				{
					"id": 35,
					"name": "Replicate",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 42,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L42"
						}
					],
					"type": {
						"type": "literal",
						"value": "replicate"
					}
				},
				{
					"id": 37,
					"name": "Restore",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 44,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L44"
						}
					],
					"type": {
						"type": "literal",
						"value": "restore"
					}
				},
				{
					"id": 30,
					"name": "Set",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 37,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L37"
						}
					],
					"type": {
						"type": "literal",
						"value": "set"
					}
				},
				{
					"id": 39,
					"name": "TableReady",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 46,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L46"
						}
					],
					"type": {
						"type": "literal",
						"value": "tableReady"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						36,
						34,
						28,
						40,
						32,
						38,
						29,
						33,
						31,
						35,
						37,
						30,
						39
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/typings/enum.ts",
					"line": 34,
					"character": 12,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L34"
				}
			]
		},
		{
			"id": 14,
			"name": "DatabaseMethod",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 25,
					"name": "All",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 30,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L30"
						}
					],
					"type": {
						"type": "literal",
						"value": 10
					}
				},
				{
					"id": 20,
					"name": "Backup",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 25,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L25"
						}
					],
					"type": {
						"type": "literal",
						"value": 5
					}
				},
				{
					"id": 18,
					"name": "Clear",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 23,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L23"
						}
					],
					"type": {
						"type": "literal",
						"value": 3
					}
				},
				{
					"id": 16,
					"name": "Delete",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 21,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L21"
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					}
				},
				{
					"id": 17,
					"name": "Flush",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 22,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L22"
						}
					],
					"type": {
						"type": "literal",
						"value": 2
					}
				},
				{
					"id": 24,
					"name": "Get",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 29,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L29"
						}
					],
					"type": {
						"type": "literal",
						"value": 9
					}
				},
				{
					"id": 26,
					"name": "Has",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 31,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L31"
						}
					],
					"type": {
						"type": "literal",
						"value": 11
					}
				},
				{
					"id": 22,
					"name": "NewFile",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 27,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L27"
						}
					],
					"type": {
						"type": "literal",
						"value": 7
					}
				},
				{
					"id": 23,
					"name": "Ping",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 28,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L28"
						}
					],
					"type": {
						"type": "literal",
						"value": 8
					}
				},
				{
					"id": 19,
					"name": "Replicate",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 24,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L24"
						}
					],
					"type": {
						"type": "literal",
						"value": 4
					}
				},
				{
					"id": 21,
					"name": "Restore",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 26,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L26"
						}
					],
					"type": {
						"type": "literal",
						"value": 6
					}
				},
				{
					"id": 15,
					"name": "Set",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 19,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L19"
						}
					],
					"type": {
						"type": "literal",
						"value": 0
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						25,
						20,
						18,
						16,
						17,
						24,
						26,
						22,
						23,
						19,
						21,
						15
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/typings/enum.ts",
					"line": 17,
					"character": 12,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L17"
				}
			]
		},
		{
			"id": 41,
			"name": "ReferenceType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 42,
					"name": "Cache",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 51,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L51"
						}
					],
					"type": {
						"type": "literal",
						"value": 0
					}
				},
				{
					"id": 43,
					"name": "File",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 52,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L52"
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						42,
						43
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/typings/enum.ts",
					"line": 50,
					"character": 12,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/enum.ts#L50"
				}
			]
		},
		{
			"id": 403,
			"name": "KeyValue",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 436,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 45,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L45"
						}
					],
					"signatures": [
						{
							"id": 437,
							"name": "new KeyValue",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "create a new database"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\nconst db = new KeyValue({\n dataConfig:{\n path:\"./database\",\n },\n encryptionConfig:{\n encriptData:true,\n securityKey:\"a-32-characters-long-string-here\"\n }\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 45,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L45"
								}
							],
							"parameters": [
								{
									"id": 438,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "options to create database"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 585,
										"name": "KeyValueOptions",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 403,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.constructor"
					}
				},
				{
					"id": 439,
					"name": "#options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 18,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L18"
						}
					],
					"type": {
						"type": "reference",
						"target": 633,
						"typeArguments": [
							{
								"type": "reference",
								"target": 585,
								"name": "KeyValueOptions",
								"package": "@akarui/aoi.db"
							}
						],
						"name": "DeepRequired",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 444,
					"name": "readyAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 26,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L26"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 440,
					"name": "tables",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 19,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L19"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 441,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 443,
											"name": "ready",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/database.ts",
													"line": 23,
													"character": 12,
													"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L23"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 442,
											"name": "table",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/database.ts",
													"line": 22,
													"character": 12,
													"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L22"
												}
											],
											"type": {
												"type": "reference",
												"target": 168,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												443,
												442
											]
										}
									],
									"sources": [
										{
											"fileName": "lib/KeyValue/src/database.ts",
											"line": 21,
											"character": 8,
											"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L21"
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"defaultValue": "{}"
				},
				{
					"id": 433,
					"name": "captureRejectionSymbol",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Value: "
							},
							{
								"kind": "code",
								"text": "`Symbol.for('nodejs.rejection')`"
							},
							{
								"kind": "text",
								"text": "\n\nSee how to write a custom "
							},
							{
								"kind": "code",
								"text": "`rejection handler`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.4.0, v12.16.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 326,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"target": 196,
							"name": "captureRejectionSymbol",
							"package": "@types/node",
							"qualifiedName": "EventEmitter.captureRejectionSymbol"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.captureRejectionSymbol"
					}
				},
				{
					"id": 434,
					"name": "captureRejections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Value: [boolean](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type)\n\nChange the default "
							},
							{
								"kind": "code",
								"text": "`captureRejections`"
							},
							{
								"kind": "text",
								"text": " option on all new "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " objects."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.4.0, v12.16.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 333,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.captureRejections"
					}
				},
				{
					"id": 435,
					"name": "defaultMaxListeners",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "By default, a maximum of "
							},
							{
								"kind": "code",
								"text": "`10`"
							},
							{
								"kind": "text",
								"text": " listeners can be registered for any single\nevent. This limit can be changed for individual "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances\nusing the "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners(n)`"
							},
							{
								"kind": "text",
								"text": " method. To change the default\nfor _all_"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances, the "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": "property can be used. If this value is not a positive number, a "
							},
							{
								"kind": "code",
								"text": "`RangeError`"
							},
							{
								"kind": "text",
								"text": "is thrown.\n\nTake caution when setting the "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": " because the\nchange affects _all_"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances, including those created before\nthe change is made. However, calling "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners(n)`"
							},
							{
								"kind": "text",
								"text": " still has\nprecedence over "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": ".\n\nThis is not a hard limit. The "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instance will allow\nmore listeners to be added but will output a trace warning to stderr indicating\nthat a \"possible EventEmitter memory leak\" has been detected. For any single"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": ", the "
							},
							{
								"kind": "code",
								"text": "`emitter.getMaxListeners()`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners()`"
							},
							{
								"kind": "text",
								"text": "methods can be used to\ntemporarily avoid this warning:\n\n"
							},
							{
								"kind": "code",
								"text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.setMaxListeners(emitter.getMaxListeners() + 1);\nemitter.once('event', () => {\n  // do stuff\n  emitter.setMaxListeners(Math.max(emitter.getMaxListeners() - 1, 0));\n});\n```"
							},
							{
								"kind": "text",
								"text": "\n\nThe "
							},
							{
								"kind": "code",
								"text": "`--trace-warnings`"
							},
							{
								"kind": "text",
								"text": " command-line flag can be used to display the\nstack trace for such warnings.\n\nThe emitted warning can be inspected with "
							},
							{
								"kind": "code",
								"text": "`process.on('warning')`"
							},
							{
								"kind": "text",
								"text": " and will\nhave the additional "
							},
							{
								"kind": "code",
								"text": "`emitter`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`type`"
							},
							{
								"kind": "text",
								"text": ", and "
							},
							{
								"kind": "code",
								"text": "`count`"
							},
							{
								"kind": "text",
								"text": " properties, referring to\nthe event emitter instance, the event's name and the number of attached\nlisteners, respectively.\nIts "
							},
							{
								"kind": "code",
								"text": "`name`"
							},
							{
								"kind": "text",
								"text": " property is set to "
							},
							{
								"kind": "code",
								"text": "`'MaxListenersExceededWarning'`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v0.11.2"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 370,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.defaultMaxListeners"
					}
				},
				{
					"id": 432,
					"name": "errorMonitor",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This symbol shall be used to install a listener for only monitoring "
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": "events. Listeners installed using this symbol are called before the regular"
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an"
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " event is emitted. Therefore, the process will still crash if no\nregular "
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " listener is installed."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.6.0, v12.17.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 319,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"target": 195,
							"name": "errorMonitor",
							"package": "@types/node",
							"qualifiedName": "EventEmitter.errorMonitor"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.errorMonitor"
					}
				},
				{
					"id": 450,
					"name": "options",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 251,
							"character": 8,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L251"
						}
					],
					"getSignature": {
						"id": 451,
						"name": "options",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "lib/KeyValue/src/database.ts",
								"line": 251,
								"character": 4,
								"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L251"
							}
						],
						"type": {
							"type": "reference",
							"target": 633,
							"typeArguments": [
								{
									"type": "reference",
									"target": 585,
									"name": "KeyValueOptions",
									"package": "@akarui/aoi.db"
								}
							],
							"name": "DeepRequired",
							"package": "@akarui/aoi.db"
						}
					}
				},
				{
					"id": 445,
					"name": "#finalizeOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 90,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L90"
						}
					],
					"signatures": [
						{
							"id": 446,
							"name": "#finalizeOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "finalize options"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 90,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L90"
								}
							],
							"parameters": [
								{
									"id": 447,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "options to finalize"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 585,
										"name": "KeyValueOptions",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 633,
								"typeArguments": [
									{
										"type": "reference",
										"target": 585,
										"name": "KeyValueOptions",
										"package": "@akarui/aoi.db"
									}
								],
								"name": "DeepRequired",
								"package": "@akarui/aoi.db"
							}
						}
					]
				},
				{
					"id": 512,
					"name": "addListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 390,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 513,
							"name": "addListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Alias for "
									},
									{
										"kind": "code",
										"text": "`emitter.on(eventName, listener)`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 390,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 514,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 515,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 516,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 390,
													"character": 66
												}
											],
											"signatures": [
												{
													"id": 517,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 390,
															"character": 66
														}
													],
													"parameters": [
														{
															"id": 518,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 403,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.addListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.addListener"
					}
				},
				{
					"id": 490,
					"name": "all",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 433,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L433"
						}
					],
					"signatures": [
						{
							"id": 491,
							"name": "all",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "get all data from table"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValue>.all(\"main\",(value,index)=>{\n  return value.key === \"key\" && value.value === \"value\";\n},10)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 433,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L433"
								}
							],
							"parameters": [
								{
									"id": 492,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "table to get"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 493,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "query to match"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 494,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/database.ts",
													"line": 435,
													"character": 16,
													"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L435"
												}
											],
											"signatures": [
												{
													"id": 495,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/KeyValue/src/database.ts",
															"line": 435,
															"character": 16,
															"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L435"
														}
													],
													"parameters": [
														{
															"id": 496,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 86,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														},
														{
															"id": 497,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								},
								{
									"id": 498,
									"name": "limit",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "limit of data to get"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 86,
													"name": "default",
													"package": "@akarui/aoi.db"
												}
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 499,
					"name": "backup",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 455,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L455"
						}
					],
					"signatures": [
						{
							"id": 500,
							"name": "backup",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "perform a backup of database"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\nsetInterval(()=>{\n<KeyValue>.backup();\n},1000 * 60 * 60 * 24) // backup every 24 hours\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 455,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L455"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 465,
					"name": "clear",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 329,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L329"
						}
					],
					"signatures": [
						{
							"id": 466,
							"name": "clear",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "clear table"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValue>.clear(\"main\");\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 329,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L329"
								}
							],
							"parameters": [
								{
									"id": 467,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "table to clear"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 472,
					"name": "clearAll",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 365,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L365"
						}
					],
					"signatures": [
						{
							"id": 473,
							"name": "clearAll",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "clear all tables"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValue>.clearAll();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 365,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L365"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 448,
					"name": "connect",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 158,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L158"
						}
					],
					"signatures": [
						{
							"id": 449,
							"name": "connect",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "connect to database"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValue>.connect()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 158,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L158"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 461,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 311,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L311"
						}
					],
					"signatures": [
						{
							"id": 462,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "delete data from database"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValue>.delete(\"main\",\"key\");\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 311,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L311"
								}
							],
							"parameters": [
								{
									"id": 463,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "table where data is saved"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 464,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "key to delete"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 86,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 504,
					"name": "deleteMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 505,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L505"
						}
					],
					"signatures": [
						{
							"id": 505,
							"name": "deleteMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "deletes all data that matches the query"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "list of deleted data if query is provided else boolean to indicate if table is cleared"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValue>.deleteMany(\"main\",(value,index)=>{\n   return value.key === \"key\" && value.value === \"value\";\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 505,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L505"
								}
							],
							"parameters": [
								{
									"id": 506,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "table to delete"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 507,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "query to match"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 508,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/database.ts",
													"line": 507,
													"character": 16,
													"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L507"
												}
											],
											"signatures": [
												{
													"id": 509,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/KeyValue/src/database.ts",
															"line": 507,
															"character": 16,
															"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L507"
														}
													],
													"parameters": [
														{
															"id": 510,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 86,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														},
														{
															"id": 511,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": true
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 86,
													"name": "default",
													"package": "@akarui/aoi.db"
												}
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 561,
					"name": "emit",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 652,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 562,
							"name": "emit",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronously calls each of the listeners registered for the event named"
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ", in the order they were registered, passing the supplied arguments\nto each.\n\nReturns "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if the event had listeners, "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " otherwise.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEmitter = new EventEmitter();\n\n// First listener\nmyEmitter.on('event', function firstListener() {\n  console.log('Helloooo! first listener');\n});\n// Second listener\nmyEmitter.on('event', function secondListener(arg1, arg2) {\n  console.log(`event with parameters ${arg1}, ${arg2} in second listener`);\n});\n// Third listener\nmyEmitter.on('event', function thirdListener(...args) {\n  const parameters = args.join(', ');\n  console.log(`event with parameters ${parameters} in third listener`);\n});\n\nconsole.log(myEmitter.listeners('event'));\n\nmyEmitter.emit('event', 1, 2, 3, 4, 5);\n\n// Prints:\n// [\n//   [Function: firstListener],\n//   [Function: secondListener],\n//   [Function: thirdListener]\n// ]\n// Helloooo! first listener\n// event with parameters 1, 2 in second listener\n// event with parameters 1, 2, 3, 4, 5 in third listener\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 652,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 563,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 564,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.emit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.emit"
					}
				},
				{
					"id": 583,
					"name": "eventNames",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 715,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 584,
							"name": "eventNames",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or "
									},
									{
										"kind": "code",
										"text": "`Symbol`"
									},
									{
										"kind": "text",
										"text": "s.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\n\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 715,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.eventNames"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.eventNames"
					}
				},
				{
					"id": 482,
					"name": "findMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 408,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L408"
						}
					],
					"signatures": [
						{
							"id": 483,
							"name": "findMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "find all data that matches the query"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValue>.findMany(\"main\",(value,index)=>{\n   return value.key === \"key\" && value.value === \"value\";\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 408,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L408"
								}
							],
							"parameters": [
								{
									"id": 484,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "table to find"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 485,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "query to match"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 486,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/database.ts",
													"line": 410,
													"character": 15,
													"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L410"
												}
											],
											"signatures": [
												{
													"id": 487,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/KeyValue/src/database.ts",
															"line": 410,
															"character": 15,
															"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L410"
														}
													],
													"parameters": [
														{
															"id": 488,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 86,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														},
														{
															"id": 489,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 86,
													"name": "default",
													"package": "@akarui/aoi.db"
												}
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 474,
					"name": "findOne",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 384,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L384"
						}
					],
					"signatures": [
						{
							"id": 475,
							"name": "findOne",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "find the first data that matches the query"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValue>.findOne(\"main\",(value,index)=>{\n    return value.key === \"key\" && value.value === \"value\";\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 384,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L384"
								}
							],
							"parameters": [
								{
									"id": 476,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "table to find"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 477,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "query to match"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 478,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/database.ts",
													"line": 386,
													"character": 15,
													"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L386"
												}
											],
											"signatures": [
												{
													"id": 479,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/KeyValue/src/database.ts",
															"line": 386,
															"character": 15,
															"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L386"
														}
													],
													"parameters": [
														{
															"id": 480,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 86,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														},
														{
															"id": 481,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 86,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 501,
					"name": "fullRepair",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 485,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L485"
						}
					],
					"signatures": [
						{
							"id": 502,
							"name": "fullRepair",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "perform a full repair of table"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValue>.fullRepair(\"main\");\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 485,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L485"
								}
							],
							"parameters": [
								{
									"id": 503,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "table to repair"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 457,
					"name": "get",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 292,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L292"
						}
					],
					"signatures": [
						{
							"id": 458,
							"name": "get",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "get data from database"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValue>.get(\"main\",\"key\");\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 292,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L292"
								}
							],
							"parameters": [
								{
									"id": 459,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "table where data is saved"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 460,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "key to get"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 86,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 553,
					"name": "getMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 567,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 554,
							"name": "getMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current max listener value for the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " which is either\nset by "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners(n)`"
									},
									{
										"kind": "text",
										"text": " or defaults to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "defaultMaxListeners",
										"target": 435
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v1.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 567,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.getMaxListeners"
					}
				},
				{
					"id": 468,
					"name": "has",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 348,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L348"
						}
					],
					"signatures": [
						{
							"id": 469,
							"name": "has",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "check if data exists in database"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValue>.has(\"main\",\"key\");\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 348,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L348"
								}
							],
							"parameters": [
								{
									"id": 470,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "table to check"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 471,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "key to check"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 565,
					"name": "listenerCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 661,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 566,
							"name": "listenerCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of listeners listening for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\nIf "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " is provided, it will return how many times the listener is found\nin the list of the listeners of the event."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v3.2.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 661,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 567,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event being listened for"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 568,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The event handler function"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listenerCount"
					}
				},
				{
					"id": 555,
					"name": "listeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 580,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 556,
							"name": "listeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 580,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 557,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listeners"
					}
				},
				{
					"id": 540,
					"name": "off",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 540,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 541,
							"name": "off",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Alias for "
									},
									{
										"kind": "code",
										"text": "`emitter.removeListener()`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v10.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 540,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 542,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 543,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 544,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 540,
													"character": 58
												}
											],
											"signatures": [
												{
													"id": 545,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 540,
															"character": 58
														}
													],
													"parameters": [
														{
															"id": 546,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 403,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.off"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.off"
					}
				},
				{
					"id": 519,
					"name": "on",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 422,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 520,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function to the end of the listeners array for the\nevent named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". No checks are made to see if the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " has\nalready been added. Multiple calls passing the same combination of "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "and "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " will result in the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " being added, and called, multiple\ntimes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The"
									},
									{
										"kind": "code",
										"text": "`emitter.prependListener()`"
									},
									{
										"kind": "text",
										"text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => console.log('a'));\nmyEE.prependListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.101"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 422,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 521,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 522,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 523,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 422,
													"character": 57
												}
											],
											"signatures": [
												{
													"id": 524,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 422,
															"character": 57
														}
													],
													"parameters": [
														{
															"id": 525,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 403,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.on"
					}
				},
				{
					"id": 526,
					"name": "once",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 452,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 527,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a **one-time**"
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". The\nnext time "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " is triggered, this listener is removed and then invoked.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.once('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The"
									},
									{
										"kind": "code",
										"text": "`emitter.prependOnceListener()`"
									},
									{
										"kind": "text",
										"text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEE = new EventEmitter();\nmyEE.once('foo', () => console.log('a'));\nmyEE.prependOnceListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.3.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 452,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 528,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 529,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 530,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 452,
													"character": 59
												}
											],
											"signatures": [
												{
													"id": 531,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 452,
															"character": 59
														}
													],
													"parameters": [
														{
															"id": 532,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 403,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.once"
					}
				},
				{
					"id": 569,
					"name": "prependListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 679,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 570,
							"name": "prependListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function to the _beginning_ of the listeners array for the\nevent named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". No checks are made to see if the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " has\nalready been added. Multiple calls passing the same combination of "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "and "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " will result in the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " being added, and called, multiple\ntimes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 679,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 571,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 572,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 573,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 679,
													"character": 70
												}
											],
											"signatures": [
												{
													"id": 574,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 679,
															"character": 70
														}
													],
													"parameters": [
														{
															"id": 575,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 403,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.prependListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.prependListener"
					}
				},
				{
					"id": 576,
					"name": "prependOnceListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 695,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 577,
							"name": "prependOnceListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a **one-time**"
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " to the _beginning_ of the listeners array. The next time "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " is triggered, this\nlistener is removed, and then invoked.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 695,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 578,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 579,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 580,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 695,
													"character": 74
												}
											],
											"signatures": [
												{
													"id": 581,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 695,
															"character": 74
														}
													],
													"parameters": [
														{
															"id": 582,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 403,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.prependOnceListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.prependOnceListener"
					}
				},
				{
					"id": 558,
					"name": "rawListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 611,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 559,
							"name": "rawListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ",\nincluding any wrappers (such as those created by "
									},
									{
										"kind": "code",
										"text": "`.once()`"
									},
									{
										"kind": "text",
										"text": ").\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v9.4.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 611,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 560,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.rawListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.rawListeners"
					}
				},
				{
					"id": 547,
					"name": "removeAllListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 551,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 548,
							"name": "removeAllListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes all listeners, or those of the specified "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 551,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 549,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 403,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.removeAllListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.removeAllListeners"
					}
				},
				{
					"id": 533,
					"name": "removeListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 535,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 534,
							"name": "removeListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes the specified "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " from the listener array for the event named"
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```"
									},
									{
										"kind": "text",
										"text": "\n\n"
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ", then "
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any"
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`removeAllListeners()`"
									},
									{
										"kind": "text",
										"text": " calls _after_ emitting and _before_ the last listener finishes execution\nwill not remove them from"
									},
									{
										"kind": "code",
										"text": "`emit()`"
									},
									{
										"kind": "text",
										"text": " in progress. Subsequent events behave as expected.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nclass MyEmitter extends EventEmitter {}\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```"
									},
									{
										"kind": "text",
										"text": "\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe "
									},
									{
										"kind": "code",
										"text": "`emitter.listeners()`"
									},
									{
										"kind": "text",
										"text": " method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), "
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " will remove the most\nrecently added instance. In the example the "
									},
									{
										"kind": "code",
										"text": "`once('ping')`"
									},
									{
										"kind": "text",
										"text": "listener is removed:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 535,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 535,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 536,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 537,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 535,
													"character": 69
												}
											],
											"signatures": [
												{
													"id": 538,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 535,
															"character": 69
														}
													],
													"parameters": [
														{
															"id": 539,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 403,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.removeListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.removeListener"
					}
				},
				{
					"id": 452,
					"name": "set",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 269,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L269"
						}
					],
					"signatures": [
						{
							"id": 453,
							"name": "set",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "set data to database"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValue>.set(\"main\",\"key\",{\n     value:\"value\",\n});\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 269,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L269"
								}
							],
							"parameters": [
								{
									"id": 454,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "table where data will be saved"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 455,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "key to set"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 456,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "value to set"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 613,
												"name": "KeyValueDataInterface",
												"package": "@akarui/aoi.db"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 86,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 550,
					"name": "setMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 561,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 551,
							"name": "setMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "By default "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s will print a warning if more than "
									},
									{
										"kind": "code",
										"text": "`10`"
									},
									{
										"kind": "text",
										"text": " listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners()`"
									},
									{
										"kind": "text",
										"text": " method allows the limit to be\nmodified for this specific "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instance. The value can be set to"
									},
									{
										"kind": "code",
										"text": "`Infinity`"
									},
									{
										"kind": "text",
										"text": " (or "
									},
									{
										"kind": "code",
										"text": "`0`"
									},
									{
										"kind": "text",
										"text": ") to indicate an unlimited number of listeners.\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.3.5"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 561,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 552,
									"name": "n",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 403,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.setMaxListeners"
					}
				},
				{
					"id": 404,
					"name": "defaultOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 55,
							"character": 11,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L55"
						}
					],
					"signatures": [
						{
							"id": 405,
							"name": "defaultOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "get default options"
											}
										]
									},
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "default options"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 55,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L55"
								}
							],
							"type": {
								"type": "reference",
								"target": 633,
								"typeArguments": [
									{
										"type": "reference",
										"target": 585,
										"name": "KeyValueOptions",
										"package": "@akarui/aoi.db"
									}
								],
								"name": "DeepRequired",
								"package": "@akarui/aoi.db"
							}
						}
					]
				},
				{
					"id": 424,
					"name": "getEventListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 296,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 425,
							"name": "getEventListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s this behaves exactly the same as calling "
									},
									{
										"kind": "code",
										"text": "`.listeners`"
									},
									{
										"kind": "text",
										"text": " on\nthe emitter.\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventTarget`"
									},
									{
										"kind": "text",
										"text": "s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { getEventListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  console.log(getEventListeners(ee, 'foo')); // [ [Function: listener] ]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  console.log(getEventListeners(et, 'foo')); // [ [Function: listener] ]\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v15.2.0, v14.17.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 296,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 426,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/events.d.ts",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												"name": "EventEmitter",
												"package": "@types/node",
												"qualifiedName": "__global.NodeJS.EventEmitter"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/events.d.ts",
													"qualifiedName": "_DOMEventTarget"
												},
												"name": "_DOMEventTarget",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 427,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getEventListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.getEventListeners"
					}
				},
				{
					"id": 420,
					"name": "listenerCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 268,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 421,
							"name": "listenerCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A class method that returns the number of listeners for the given "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "registered on the given "
									},
									{
										"kind": "code",
										"text": "`emitter`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, listenerCount } from 'node:events';\n\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.9.12"
											}
										]
									},
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Since v3.2.0 - Use "
											},
											{
												"kind": "code",
												"text": "`listenerCount`"
											},
											{
												"kind": "text",
												"text": " instead."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 268,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 422,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The emitter to query"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "__global.NodeJS.EventEmitter"
										},
										"name": "EventEmitter",
										"package": "@types/node",
										"qualifiedName": "__global.NodeJS.EventEmitter"
									}
								},
								{
									"id": 423,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The event name"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listenerCount"
					}
				},
				{
					"id": 415,
					"name": "on",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 250,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 416,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\n// Emit later on\nprocess.nextTick(() => {\n  ee.emit('foo', 'bar');\n  ee.emit('foo', 42);\n});\n\nfor await (const event of on(ee, 'foo')) {\n  // The execution of this inner block is synchronous and it\n  // processes one event at a time (even with await). Do not use\n  // if concurrent execution is required.\n  console.log(event); // prints ['bar'] [42]\n}\n// Unreachable here\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns an "
									},
									{
										"kind": "code",
										"text": "`AsyncIterator`"
									},
									{
										"kind": "text",
										"text": " that iterates "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " events. It will throw\nif the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": ". It removes all listeners when\nexiting the loop. The "
									},
									{
										"kind": "code",
										"text": "`value`"
									},
									{
										"kind": "text",
										"text": " returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": " can be used to cancel waiting on events:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v13.6.0, v12.16.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "that iterates "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " events emitted by the "
											},
											{
												"kind": "code",
												"text": "`emitter`"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 250,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 417,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "__global.NodeJS.EventEmitter"
										},
										"name": "EventEmitter",
										"package": "@types/node",
										"qualifiedName": "__global.NodeJS.EventEmitter"
									}
								},
								{
									"id": 418,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event being listened for"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 419,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es2018.asynciterable.d.ts",
									"qualifiedName": "AsyncIterableIterator"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "AsyncIterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.on"
					}
				},
				{
					"id": 406,
					"name": "once",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 189,
							"character": 15
						},
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 190,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 407,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a "
									},
									{
										"kind": "code",
										"text": "`Promise`"
									},
									{
										"kind": "text",
										"text": " that is fulfilled when the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits the given\nevent or that is rejected if the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " while waiting.\nThe "
									},
									{
										"kind": "code",
										"text": "`Promise`"
									},
									{
										"kind": "text",
										"text": " will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special"
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event\nsemantics and does not listen to the "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { once, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\nprocess.nextTick(() => {\n  ee.emit('myevent', 42);\n});\n\nconst [value] = await once(ee, 'myevent');\nconsole.log(value);\n\nconst err = new Error('kaboom');\nprocess.nextTick(() => {\n  ee.emit('error', err);\n});\n\ntry {\n  await once(ee, 'myevent');\n} catch (err) {\n  console.error('error happened', err);\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThe special handling of the "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event is only used when "
									},
									{
										"kind": "code",
										"text": "`events.once()`"
									},
									{
										"kind": "text",
										"text": "is used to wait for another event. If "
									},
									{
										"kind": "code",
										"text": "`events.once()`"
									},
									{
										"kind": "text",
										"text": " is used to wait for the\n'"
									},
									{
										"kind": "code",
										"text": "`error'`"
									},
									{
										"kind": "text",
										"text": " event itself, then it is treated as any other kind of event without\nspecial handling:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.error('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```"
									},
									{
										"kind": "text",
										"text": "\n\nAn "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": " can be used to cancel waiting for the event:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v11.13.0, v10.16.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 189,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 408,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "_NodeEventTarget"
										},
										"name": "_NodeEventTarget",
										"package": "@types/node"
									}
								},
								{
									"id": 409,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 410,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						},
						{
							"id": 411,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 190,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 412,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "_DOMEventTarget"
										},
										"name": "_DOMEventTarget",
										"package": "@types/node"
									}
								},
								{
									"id": 413,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 414,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.once"
					}
				},
				{
					"id": 428,
					"name": "setMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 311,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 429,
							"name": "setMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "```js\nimport { setMaxListeners, EventEmitter } from 'node:events';\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v15.4.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 311,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 430,
									"name": "n",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A non-negative number. The maximum number of listeners per "
											},
											{
												"kind": "code",
												"text": "`EventTarget`"
											},
											{
												"kind": "text",
												"text": " event."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 431,
									"name": "eventTargets",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/@types/node/events.d.ts",
														"qualifiedName": "__global.NodeJS.EventEmitter"
													},
													"name": "EventEmitter",
													"package": "@types/node",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/@types/node/events.d.ts",
														"qualifiedName": "_DOMEventTarget"
													},
													"name": "_DOMEventTarget",
													"package": "@types/node"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.setMaxListeners"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						436
					]
				},
				{
					"title": "Properties",
					"children": [
						439,
						444,
						440,
						433,
						434,
						435,
						432
					]
				},
				{
					"title": "Accessors",
					"children": [
						450
					]
				},
				{
					"title": "Methods",
					"children": [
						445,
						512,
						490,
						499,
						465,
						472,
						448,
						461,
						504,
						561,
						583,
						482,
						474,
						501,
						457,
						553,
						468,
						565,
						555,
						540,
						519,
						526,
						569,
						576,
						558,
						547,
						533,
						452,
						550,
						404,
						424,
						420,
						415,
						406,
						428
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/src/database.ts",
					"line": 17,
					"character": 21,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/database.ts#L17"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "node_modules/@types/node/events.d.ts",
						"qualifiedName": "EventEmitter"
					},
					"name": "EventEmitter",
					"package": "@types/node"
				}
			]
		},
		{
			"id": 44,
			"name": "KeyValueCacher",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 45,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/cache.ts",
							"line": 7,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/cache.ts#L7"
						}
					],
					"signatures": [
						{
							"id": 46,
							"name": "new KeyValueCacher",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/cache.ts",
									"line": 7,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/cache.ts#L7"
								}
							],
							"parameters": [
								{
									"id": 47,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 624,
										"name": "CacherOptions",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 44,
								"name": "default",
								"package": "@akarui/aoi.db"
							}
						}
					]
				},
				{
					"id": 49,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/cache.ts",
							"line": 5,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/cache.ts#L5"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es2015.collection.d.ts",
									"qualifiedName": "Map"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 619,
										"name": "KeyValueJSONOption",
										"package": "@akarui/aoi.db"
									}
								],
								"name": "Map",
								"package": "typescript"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 48,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/cache.ts",
							"line": 4,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/cache.ts#L4"
						}
					],
					"type": {
						"type": "reference",
						"target": 624,
						"name": "CacherOptions",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 50,
					"name": "size",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/cache.ts",
							"line": 6,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/cache.ts#L6"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 64,
					"name": "clear",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/cache.ts",
							"line": 24,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/cache.ts#L24"
						}
					],
					"signatures": [
						{
							"id": 65,
							"name": "clear",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/cache.ts",
									"line": 24,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/cache.ts#L24"
								}
							],
							"parameters": [
								{
									"id": 66,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 71,
					"name": "clearAll",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/cache.ts",
							"line": 32,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/cache.ts#L32"
						}
					],
					"signatures": [
						{
							"id": 72,
							"name": "clearAll",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/cache.ts",
									"line": 32,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/cache.ts#L32"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/cache.ts",
							"line": 20,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/cache.ts#L20"
						}
					],
					"signatures": [
						{
							"id": 61,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/cache.ts",
									"line": 20,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/cache.ts#L20"
								}
							],
							"parameters": [
								{
									"id": 62,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 63,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						}
					]
				},
				{
					"id": 56,
					"name": "get",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/cache.ts",
							"line": 16,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/cache.ts#L16"
						}
					],
					"signatures": [
						{
							"id": 57,
							"name": "get",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/cache.ts",
									"line": 16,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/cache.ts#L16"
								}
							],
							"parameters": [
								{
									"id": 58,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 619,
										"name": "KeyValueJSONOption",
										"package": "@akarui/aoi.db"
									}
								]
							}
						}
					]
				},
				{
					"id": 83,
					"name": "getFileCache",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/cache.ts",
							"line": 42,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/cache.ts#L42"
						}
					],
					"signatures": [
						{
							"id": 84,
							"name": "getFileCache",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/cache.ts",
									"line": 42,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/cache.ts#L42"
								}
							],
							"parameters": [
								{
									"id": 85,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es2015.collection.d.ts",
									"qualifiedName": "Map"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 619,
										"name": "KeyValueJSONOption",
										"package": "@akarui/aoi.db"
									}
								],
								"name": "Map",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 67,
					"name": "has",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/cache.ts",
							"line": 28,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/cache.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 68,
							"name": "has",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/cache.ts",
									"line": 28,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/cache.ts#L28"
								}
							],
							"parameters": [
								{
									"id": 69,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 70,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						}
					]
				},
				{
					"id": 73,
					"name": "replace",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/cache.ts",
							"line": 35,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/cache.ts#L35"
						}
					],
					"signatures": [
						{
							"id": 74,
							"name": "replace",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/cache.ts",
									"line": 35,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/cache.ts#L35"
								}
							],
							"parameters": [
								{
									"id": 75,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 76,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 619,
												"name": "KeyValueJSONOption",
												"package": "@akarui/aoi.db"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 51,
					"name": "set",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/cache.ts",
							"line": 12,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/cache.ts#L12"
						}
					],
					"signatures": [
						{
							"id": 52,
							"name": "set",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/cache.ts",
									"line": 12,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/cache.ts#L12"
								}
							],
							"parameters": [
								{
									"id": 53,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 54,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 619,
										"name": "KeyValueJSONOption",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 55,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 77,
					"name": "toJSON",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/cache.ts",
							"line": 38,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/cache.ts#L38"
						}
					],
					"signatures": [
						{
							"id": 78,
							"name": "toJSON",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/cache.ts",
									"line": 38,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/cache.ts#L38"
								}
							],
							"parameters": [
								{
									"id": 79,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 80,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2019.object.d.ts",
											"line": 26,
											"character": 72
										}
									],
									"indexSignature": {
										"id": 81,
										"name": "__index",
										"variant": "signature",
										"kind": 8192,
										"flags": {},
										"sources": [
											{
												"fileName": "node_modules/typescript/lib/lib.es2019.object.d.ts",
												"line": 26,
												"character": 74
											}
										],
										"parameters": [
											{
												"id": 82,
												"name": "k",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									}
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						45
					]
				},
				{
					"title": "Properties",
					"children": [
						49,
						48,
						50
					]
				},
				{
					"title": "Methods",
					"children": [
						64,
						71,
						60,
						56,
						83,
						67,
						73,
						51,
						77
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/src/cache.ts",
					"line": 3,
					"character": 21,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/cache.ts#L3"
				}
			]
		},
		{
			"id": 86,
			"name": "KeyValueData",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 89,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/data.ts",
							"line": 29,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/data.ts#L29"
						}
					],
					"signatures": [
						{
							"id": 90,
							"name": "new KeyValueData",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "create data"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "Data"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\nconst data = new Data({\nfile:\"file\",\nkey:\"key\",\nvalue:\"value\",\nttl:1000,\ntype:\"string\"\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/data.ts",
									"line": 29,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/data.ts#L29"
								}
							],
							"parameters": [
								{
									"id": 91,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "data to create"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4,
										"typeArguments": [
											{
												"type": "reference",
												"target": 613,
												"name": "KeyValueDataInterface",
												"package": "@akarui/aoi.db"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "type"
													},
													{
														"type": "literal",
														"value": "ttl"
													}
												]
											}
										],
										"name": "Optional",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 86,
								"name": "default",
								"package": "@akarui/aoi.db"
							}
						}
					]
				},
				{
					"id": 92,
					"name": "file",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/data.ts",
							"line": 5,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/data.ts#L5"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 93,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/data.ts",
							"line": 6,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/data.ts#L6"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 95,
					"name": "ttl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/data.ts",
							"line": 8,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/data.ts#L8"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 96,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/data.ts",
							"line": 9,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/data.ts#L9"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 94,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/data.ts",
							"line": 7,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/data.ts#L7"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 105,
					"name": "size",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/data.ts",
							"line": 88,
							"character": 8,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/data.ts#L88"
						}
					],
					"getSignature": {
						"id": 106,
						"name": "size",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "lib/KeyValue/src/data.ts",
								"line": 88,
								"character": 4,
								"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/data.ts#L88"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 97,
					"name": "#getType",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/data.ts",
							"line": 42,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/data.ts#L42"
						}
					],
					"signatures": [
						{
							"id": 98,
							"name": "#getType",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "get type of value"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/data.ts",
									"line": 42,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/data.ts#L42"
								}
							],
							"parameters": [
								{
									"id": 99,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "value to get type"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "string"
									},
									{
										"type": "literal",
										"value": "number"
									},
									{
										"type": "literal",
										"value": "bigint"
									},
									{
										"type": "literal",
										"value": "boolean"
									},
									{
										"type": "literal",
										"value": "symbol"
									},
									{
										"type": "literal",
										"value": "undefined"
									},
									{
										"type": "literal",
										"value": "object"
									},
									{
										"type": "literal",
										"value": "function"
									},
									{
										"type": "literal",
										"value": "date"
									}
								]
							}
						}
					]
				},
				{
					"id": 100,
					"name": "#parseValue",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/data.ts",
							"line": 51,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/data.ts#L51"
						}
					],
					"signatures": [
						{
							"id": 101,
							"name": "#parseValue",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "parse value to correct type"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/data.ts",
									"line": 51,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/data.ts#L51"
								}
							],
							"parameters": [
								{
									"id": 102,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "data to parse"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4,
										"typeArguments": [
											{
												"type": "reference",
												"target": 613,
												"name": "KeyValueDataInterface",
												"package": "@akarui/aoi.db"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "type"
													},
													{
														"type": "literal",
														"value": "ttl"
													}
												]
											}
										],
										"name": "Optional",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 103,
					"name": "toJSON",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/data.ts",
							"line": 75,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/data.ts#L75"
						}
					],
					"signatures": [
						{
							"id": 104,
							"name": "toJSON",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "convert data to json"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "Data"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValueData>.toJSON()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/data.ts",
									"line": 75,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/data.ts#L75"
								}
							],
							"type": {
								"type": "reference",
								"target": 619,
								"name": "KeyValueJSONOption",
								"package": "@akarui/aoi.db"
							}
						}
					]
				},
				{
					"id": 87,
					"name": "emptyData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/data.ts",
							"line": 96,
							"character": 11,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/data.ts#L96"
						}
					],
					"signatures": [
						{
							"id": 88,
							"name": "emptyData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "create empty data"
											}
										]
									},
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/data.ts",
									"line": 96,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/data.ts#L96"
								}
							],
							"type": {
								"type": "reference",
								"target": 86,
								"name": "default",
								"package": "@akarui/aoi.db"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						89
					]
				},
				{
					"title": "Properties",
					"children": [
						92,
						93,
						95,
						96,
						94
					]
				},
				{
					"title": "Accessors",
					"children": [
						105
					]
				},
				{
					"title": "Methods",
					"children": [
						97,
						100,
						103,
						87
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/src/data.ts",
					"line": 4,
					"character": 21,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/data.ts#L4"
				}
			]
		},
		{
			"id": 107,
			"name": "KeyValueReferencer",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 108,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/referencer.ts",
							"line": 30,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L30"
						}
					],
					"signatures": [
						{
							"id": 109,
							"name": "new KeyValueReferencer",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/referencer.ts",
									"line": 30,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L30"
								}
							],
							"parameters": [
								{
									"id": 110,
									"name": "path",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 111,
									"name": "maxSize",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 112,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 41,
										"name": "ReferenceType",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 107,
								"name": "default",
								"package": "@akarui/aoi.db"
							}
						}
					]
				},
				{
					"id": 118,
					"name": "#path",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/referencer.ts",
							"line": 22,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L22"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 113,
					"name": "cache",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/referencer.ts",
							"line": 14,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L14"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 114,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 115,
											"name": "file",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/referencer.ts",
													"line": 17,
													"character": 12,
													"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L17"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 116,
											"name": "referenceFile",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/referencer.ts",
													"line": 18,
													"character": 12,
													"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L18"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												115,
												116
											]
										}
									],
									"sources": [
										{
											"fileName": "lib/KeyValue/src/referencer.ts",
											"line": 16,
											"character": 8,
											"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L16"
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"defaultValue": "{}"
				},
				{
					"id": 117,
					"name": "cacheSize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/referencer.ts",
							"line": 21,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L21"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "-1"
				},
				{
					"id": 119,
					"name": "files",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/referencer.ts",
							"line": 23,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L23"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 120,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 121,
										"name": "name",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "lib/KeyValue/src/referencer.ts",
												"line": 24,
												"character": 8,
												"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L24"
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 122,
										"name": "size",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "lib/KeyValue/src/referencer.ts",
												"line": 25,
												"character": 8,
												"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L25"
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									},
									{
										"id": 123,
										"name": "writer",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "lib/KeyValue/src/referencer.ts",
												"line": 26,
												"character": 8,
												"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L26"
											}
										],
										"type": {
											"type": "reference",
											"target": {
												"sourceFileName": "node_modules/@types/node/fs.d.ts",
												"qualifiedName": "\"fs\".WriteStream"
											},
											"name": "WriteStream",
											"package": "@types/node",
											"qualifiedName": "\"fs\".WriteStream"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											121,
											122,
											123
										]
									}
								],
								"sources": [
									{
										"fileName": "lib/KeyValue/src/referencer.ts",
										"line": 23,
										"character": 11,
										"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L23"
									}
								]
							}
						}
					}
				},
				{
					"id": 124,
					"name": "maxSize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/referencer.ts",
							"line": 28,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L28"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 125,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/referencer.ts",
							"line": 29,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L29"
						}
					],
					"type": {
						"type": "reference",
						"target": 41,
						"name": "ReferenceType",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 146,
					"name": "#createFile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/referencer.ts",
							"line": 151,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L151"
						}
					],
					"signatures": [
						{
							"id": 147,
							"name": "#createFile",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "create file"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/referencer.ts",
									"line": 151,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L151"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 140,
					"name": "#currentFile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/referencer.ts",
							"line": 137,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L137"
						}
					],
					"signatures": [
						{
							"id": 141,
							"name": "#currentFile",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "get current file"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "current file"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/referencer.ts",
									"line": 137,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L137"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 142,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 143,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/referencer.ts",
													"line": 139,
													"character": 12,
													"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L139"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 144,
											"name": "size",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/referencer.ts",
													"line": 140,
													"character": 12,
													"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L140"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 145,
											"name": "writer",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/referencer.ts",
													"line": 141,
													"character": 12,
													"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L141"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/fs.d.ts",
													"qualifiedName": "\"fs\".WriteStream"
												},
												"name": "WriteStream",
												"package": "@types/node",
												"qualifiedName": "\"fs\".WriteStream"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												143,
												144,
												145
											]
										}
									],
									"sources": [
										{
											"fileName": "lib/KeyValue/src/referencer.ts",
											"line": 138,
											"character": 36,
											"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L138"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 155,
					"name": "#deleteReference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/referencer.ts",
							"line": 218,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L218"
						}
					],
					"signatures": [
						{
							"id": 156,
							"name": "#deleteReference",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "delete reference"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/referencer.ts",
									"line": 218,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L218"
								}
							],
							"parameters": [
								{
									"id": 157,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "key to delete"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 158,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "file to delete"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 159,
					"name": "#getFileReference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/referencer.ts",
							"line": 237,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L237"
						}
					],
					"signatures": [
						{
							"id": 160,
							"name": "#getFileReference",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "get all references from file"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/referencer.ts",
									"line": 237,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L237"
								}
							],
							"parameters": [
								{
									"id": 161,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "file to get reference"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 126,
					"name": "#getReference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/referencer.ts",
							"line": 56,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L56"
						}
					],
					"signatures": [
						{
							"id": 127,
							"name": "#getReference",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "get reference from files"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/referencer.ts",
									"line": 56,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L56"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 128,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 129,
															"name": "file",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/KeyValue/src/referencer.ts",
																	"line": 60,
																	"character": 16,
																	"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L60"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 130,
															"name": "referenceFile",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/KeyValue/src/referencer.ts",
																	"line": 61,
																	"character": 16,
																	"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L61"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																129,
																130
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/KeyValue/src/referencer.ts",
															"line": 59,
															"character": 12,
															"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L59"
														}
													]
												}
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 136,
					"name": "#saveReference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/referencer.ts",
							"line": 117,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L117"
						}
					],
					"signatures": [
						{
							"id": 137,
							"name": "#saveReference",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "save reference to file"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/referencer.ts",
									"line": 117,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L117"
								}
							],
							"parameters": [
								{
									"id": 138,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "key to save"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 139,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "file to save"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 162,
					"name": "clear",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/referencer.ts",
							"line": 259,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L259"
						}
					],
					"signatures": [
						{
							"id": 163,
							"name": "clear",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "clear the Referencer"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<Referencer>.clear()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/referencer.ts",
									"line": 259,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L259"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 152,
					"name": "deleteReference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/referencer.ts",
							"line": 196,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L196"
						}
					],
					"signatures": [
						{
							"id": 153,
							"name": "deleteReference",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "delete reference"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<Referencer>.deleteReference(\"key\")\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/referencer.ts",
									"line": 196,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L196"
								}
							],
							"parameters": [
								{
									"id": 154,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "key to delete"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 131,
					"name": "getReference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/referencer.ts",
							"line": 97,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L97"
						}
					],
					"signatures": [
						{
							"id": 132,
							"name": "getReference",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "get references"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<Referencer>.getReference() // {key:{file:\"file\",referenceFile:\"referenceFile\"}}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/referencer.ts",
									"line": 97,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L97"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 133,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 134,
															"name": "file",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/KeyValue/src/referencer.ts",
																	"line": 17,
																	"character": 12,
																	"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L17"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 135,
															"name": "referenceFile",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/KeyValue/src/referencer.ts",
																	"line": 18,
																	"character": 12,
																	"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L18"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																134,
																135
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/KeyValue/src/referencer.ts",
															"line": 16,
															"character": 8,
															"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L16"
														}
													]
												}
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 164,
					"name": "open",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/referencer.ts",
							"line": 286,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L286"
						}
					],
					"signatures": [
						{
							"id": 165,
							"name": "open",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "open the Referencer"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<Referencer>.open()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/referencer.ts",
									"line": 286,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L286"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 166,
					"name": "restart",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/referencer.ts",
							"line": 304,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L304"
						}
					],
					"signatures": [
						{
							"id": 167,
							"name": "restart",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "restart the Referencer"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<Referencer>.restart()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/referencer.ts",
									"line": 304,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L304"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 148,
					"name": "setReference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/referencer.ts",
							"line": 175,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L175"
						}
					],
					"signatures": [
						{
							"id": 149,
							"name": "setReference",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "set reference"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<Referencer>.setReference(\"key\",\"file\")\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/referencer.ts",
									"line": 175,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L175"
								}
							],
							"parameters": [
								{
									"id": 150,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "key to set"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 151,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "file to set"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						108
					]
				},
				{
					"title": "Properties",
					"children": [
						118,
						113,
						117,
						119,
						124,
						125
					]
				},
				{
					"title": "Methods",
					"children": [
						146,
						140,
						155,
						159,
						126,
						136,
						162,
						152,
						131,
						164,
						166,
						148
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/src/referencer.ts",
					"line": 13,
					"character": 21,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/referencer.ts#L13"
				}
			]
		},
		{
			"id": 168,
			"name": "KeyValueTable",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 199,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 91,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L91"
						}
					],
					"signatures": [
						{
							"id": 200,
							"name": "new KeyValueTable",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Creates a new table"
											}
										]
									},
									{
										"tag": "@mermaid",
										"content": [
											{
												"kind": "text",
												"text": "graph LR;\nA[KeyValue] --> B[Table];"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 91,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L91"
								}
							],
							"parameters": [
								{
									"id": 201,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The options for the table"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 611,
										"name": "KeyValueTableOptions",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 202,
									"name": "db",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The database instance"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 403,
										"name": "default",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 168,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.constructor"
					}
				},
				{
					"id": 219,
					"name": "#cache",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 59,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L59"
						}
					],
					"type": {
						"type": "reference",
						"target": 44,
						"name": "default",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 225,
					"name": "#intervals",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 65,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L65"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 226,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 228,
									"name": "delete",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/KeyValue/src/table.ts",
											"line": 67,
											"character": 8,
											"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L67"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/timers.d.ts",
													"qualifiedName": "__global.NodeJS.Timeout"
												},
												"name": "Timeout",
												"package": "@types/node",
												"qualifiedName": "__global.NodeJS.Timeout"
											}
										]
									},
									"defaultValue": "..."
								},
								{
									"id": 227,
									"name": "set",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/KeyValue/src/table.ts",
											"line": 66,
											"character": 8,
											"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L66"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/timers.d.ts",
													"qualifiedName": "__global.NodeJS.Timeout"
												},
												"name": "Timeout",
												"package": "@types/node",
												"qualifiedName": "__global.NodeJS.Timeout"
											}
										]
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										228,
										227
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 65,
									"character": 17,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L65"
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 215,
					"name": "#queue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 55,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L55"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 216,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 218,
									"name": "delete",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/KeyValue/src/table.ts",
											"line": 57,
											"character": 8,
											"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L57"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									"defaultValue": "..."
								},
								{
									"id": 217,
									"name": "set",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/KeyValue/src/table.ts",
											"line": 56,
											"character": 8,
											"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L56"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 86,
											"name": "default",
											"package": "@akarui/aoi.db"
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										218,
										217
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 55,
									"character": 13,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L55"
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 220,
					"name": "#queued",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 60,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L60"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 221,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 224,
									"name": "delete",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/KeyValue/src/table.ts",
											"line": 63,
											"character": 8,
											"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L63"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								},
								{
									"id": 223,
									"name": "reference",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/KeyValue/src/table.ts",
											"line": 62,
											"character": 8,
											"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L62"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								},
								{
									"id": 222,
									"name": "set",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/KeyValue/src/table.ts",
											"line": 61,
											"character": 8,
											"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L61"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										224,
										223,
										222
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 60,
									"character": 14,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L60"
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 204,
					"name": "db",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 44,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L44"
						}
					],
					"type": {
						"type": "reference",
						"target": 403,
						"name": "default",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 209,
					"name": "files",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 49,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L49"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 210,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 211,
										"name": "name",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "lib/KeyValue/src/table.ts",
												"line": 50,
												"character": 8,
												"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L50"
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 212,
										"name": "size",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "lib/KeyValue/src/table.ts",
												"line": 51,
												"character": 8,
												"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L51"
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									},
									{
										"id": 213,
										"name": "writer",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "lib/KeyValue/src/table.ts",
												"line": 52,
												"character": 8,
												"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L52"
											}
										],
										"type": {
											"type": "reference",
											"target": {
												"sourceFileName": "node_modules/@types/node/fs.d.ts",
												"qualifiedName": "\"fs\".WriteStream"
											},
											"name": "WriteStream",
											"package": "@types/node",
											"qualifiedName": "\"fs\".WriteStream"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											211,
											212,
											213
										]
									}
								],
								"sources": [
									{
										"fileName": "lib/KeyValue/src/table.ts",
										"line": 49,
										"character": 12,
										"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L49"
									}
								]
							}
						}
					}
				},
				{
					"id": 231,
					"name": "logData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 71,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L71"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 232,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 235,
									"name": "fullWriter",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/KeyValue/src/table.ts",
											"line": 74,
											"character": 8,
											"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L74"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/fs.d.ts",
											"qualifiedName": "\"fs\".WriteStream"
										},
										"name": "WriteStream",
										"package": "@types/node",
										"qualifiedName": "\"fs\".WriteStream"
									}
								},
								{
									"id": 234,
									"name": "size",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/KeyValue/src/table.ts",
											"line": 73,
											"character": 8,
											"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L73"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 233,
									"name": "writer",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/KeyValue/src/table.ts",
											"line": 72,
											"character": 8,
											"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L72"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/fs.d.ts",
											"qualifiedName": "\"fs\".WriteStream"
										},
										"name": "WriteStream",
										"package": "@types/node",
										"qualifiedName": "\"fs\".WriteStream"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										235,
										234,
										233
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 71,
									"character": 14,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L71"
								}
							]
						}
					}
				},
				{
					"id": 214,
					"name": "logHash",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 54,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L54"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 203,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 43,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L43"
						}
					],
					"type": {
						"type": "reference",
						"target": 611,
						"name": "KeyValueTableOptions",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 205,
					"name": "paths",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 45,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L45"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 206,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 208,
									"name": "log",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/KeyValue/src/table.ts",
											"line": 47,
											"character": 8,
											"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L47"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 207,
									"name": "reference",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/KeyValue/src/table.ts",
											"line": 46,
											"character": 8,
											"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L46"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										208,
										207
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 45,
									"character": 12,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L45"
								}
							]
						}
					}
				},
				{
					"id": 230,
					"name": "readyAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 70,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L70"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 229,
					"name": "referencer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 69,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L69"
						}
					],
					"type": {
						"type": "reference",
						"target": 107,
						"name": "default",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 236,
					"name": "repairMode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 77,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L77"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 196,
					"name": "captureRejectionSymbol",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Value: "
							},
							{
								"kind": "code",
								"text": "`Symbol.for('nodejs.rejection')`"
							},
							{
								"kind": "text",
								"text": "\n\nSee how to write a custom "
							},
							{
								"kind": "code",
								"text": "`rejection handler`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.4.0, v12.16.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 326,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"target": 196,
							"name": "captureRejectionSymbol",
							"package": "@types/node",
							"qualifiedName": "EventEmitter.captureRejectionSymbol"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.captureRejectionSymbol"
					}
				},
				{
					"id": 197,
					"name": "captureRejections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Value: [boolean](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type)\n\nChange the default "
							},
							{
								"kind": "code",
								"text": "`captureRejections`"
							},
							{
								"kind": "text",
								"text": " option on all new "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " objects."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.4.0, v12.16.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 333,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.captureRejections"
					}
				},
				{
					"id": 198,
					"name": "defaultMaxListeners",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "By default, a maximum of "
							},
							{
								"kind": "code",
								"text": "`10`"
							},
							{
								"kind": "text",
								"text": " listeners can be registered for any single\nevent. This limit can be changed for individual "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances\nusing the "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners(n)`"
							},
							{
								"kind": "text",
								"text": " method. To change the default\nfor _all_"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances, the "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": "property can be used. If this value is not a positive number, a "
							},
							{
								"kind": "code",
								"text": "`RangeError`"
							},
							{
								"kind": "text",
								"text": "is thrown.\n\nTake caution when setting the "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": " because the\nchange affects _all_"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances, including those created before\nthe change is made. However, calling "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners(n)`"
							},
							{
								"kind": "text",
								"text": " still has\nprecedence over "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": ".\n\nThis is not a hard limit. The "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instance will allow\nmore listeners to be added but will output a trace warning to stderr indicating\nthat a \"possible EventEmitter memory leak\" has been detected. For any single"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": ", the "
							},
							{
								"kind": "code",
								"text": "`emitter.getMaxListeners()`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners()`"
							},
							{
								"kind": "text",
								"text": "methods can be used to\ntemporarily avoid this warning:\n\n"
							},
							{
								"kind": "code",
								"text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.setMaxListeners(emitter.getMaxListeners() + 1);\nemitter.once('event', () => {\n  // do stuff\n  emitter.setMaxListeners(Math.max(emitter.getMaxListeners() - 1, 0));\n});\n```"
							},
							{
								"kind": "text",
								"text": "\n\nThe "
							},
							{
								"kind": "code",
								"text": "`--trace-warnings`"
							},
							{
								"kind": "text",
								"text": " command-line flag can be used to display the\nstack trace for such warnings.\n\nThe emitted warning can be inspected with "
							},
							{
								"kind": "code",
								"text": "`process.on('warning')`"
							},
							{
								"kind": "text",
								"text": " and will\nhave the additional "
							},
							{
								"kind": "code",
								"text": "`emitter`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`type`"
							},
							{
								"kind": "text",
								"text": ", and "
							},
							{
								"kind": "code",
								"text": "`count`"
							},
							{
								"kind": "text",
								"text": " properties, referring to\nthe event emitter instance, the event's name and the number of attached\nlisteners, respectively.\nIts "
							},
							{
								"kind": "code",
								"text": "`name`"
							},
							{
								"kind": "text",
								"text": " property is set to "
							},
							{
								"kind": "code",
								"text": "`'MaxListenersExceededWarning'`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v0.11.2"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 370,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.defaultMaxListeners"
					}
				},
				{
					"id": 195,
					"name": "errorMonitor",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This symbol shall be used to install a listener for only monitoring "
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": "events. Listeners installed using this symbol are called before the regular"
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an"
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " event is emitted. Therefore, the process will still crash if no\nregular "
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " listener is installed."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.6.0, v12.17.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 319,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"target": 195,
							"name": "errorMonitor",
							"package": "@types/node",
							"qualifiedName": "EventEmitter.errorMonitor"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.errorMonitor"
					}
				},
				{
					"id": 270,
					"name": "queue",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 585,
							"character": 8,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L585"
						}
					],
					"getSignature": {
						"id": 271,
						"name": "queue",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@description",
									"content": [
										{
											"kind": "text",
											"text": "Gets the queue"
										}
									]
								},
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The queue"
										}
									]
								},
								{
									"tag": "@example",
									"content": [
										{
											"kind": "code",
											"text": "```js\n<KeyValueTable>.queue\n```"
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "lib/KeyValue/src/table.ts",
								"line": 585,
								"character": 4,
								"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L585"
							}
						],
						"type": {
							"type": "reflection",
							"declaration": {
								"id": 272,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 274,
										"name": "delete",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "lib/KeyValue/src/table.ts",
												"line": 57,
												"character": 8,
												"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L57"
											}
										],
										"type": {
											"type": "reference",
											"target": {
												"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Record"
											},
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Record"
													},
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "Record",
													"package": "typescript"
												}
											],
											"name": "Record",
											"package": "typescript"
										},
										"defaultValue": "..."
									},
									{
										"id": 273,
										"name": "set",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "lib/KeyValue/src/table.ts",
												"line": 56,
												"character": 8,
												"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L56"
											}
										],
										"type": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"target": 86,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										},
										"defaultValue": "..."
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											274,
											273
										]
									}
								],
								"sources": [
									{
										"fileName": "lib/KeyValue/src/table.ts",
										"line": 55,
										"character": 13,
										"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L55"
									}
								]
							}
						}
					}
				},
				{
					"id": 239,
					"name": "#checkIntegrity",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 153,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L153"
						}
					],
					"signatures": [
						{
							"id": 240,
							"name": "#checkIntegrity",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Checks the integrity of the table and does a small self repair if needed"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 153,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L153"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 253,
					"name": "#createNewFile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 425,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L425"
						}
					],
					"signatures": [
						{
							"id": 254,
							"name": "#createNewFile",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Creates a new file"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The name of the new file"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 425,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L425"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 285,
					"name": "#delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 682,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L682"
						}
					],
					"signatures": [
						{
							"id": 286,
							"name": "#delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 682,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L682"
								}
							],
							"parameters": [
								{
									"id": 287,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The key of the data"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 288,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The file where the data is stored"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 86,
										"name": "default",
										"package": "@akarui/aoi.db"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 289,
					"name": "#deleteFlush",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 755,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L755"
						}
					],
					"signatures": [
						{
							"id": 290,
							"name": "#deleteFlush",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Flushes the delete queue"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 755,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L755"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 296,
					"name": "#fetchFile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 852,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L852"
						}
					],
					"signatures": [
						{
							"id": 297,
							"name": "#fetchFile",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Fetches the file"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The file"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 852,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L852"
								}
							],
							"parameters": [
								{
									"id": 298,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The file to fetch"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 619,
												"name": "KeyValueJSONOption",
												"package": "@akarui/aoi.db"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 259,
					"name": "#fileSize",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 531,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L531"
						}
					],
					"signatures": [
						{
							"id": 260,
							"name": "#fileSize",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "gets the size of the file"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The size of the file"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 531,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L531"
								}
							],
							"parameters": [
								{
									"id": 261,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The file to get the size of"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 278,
					"name": "#get",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 633,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L633"
						}
					],
					"signatures": [
						{
							"id": 279,
							"name": "#get",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 633,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L633"
								}
							],
							"parameters": [
								{
									"id": 280,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "key of the data"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 281,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "file where the data is stored"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 619,
												"name": "KeyValueJSONOption",
												"package": "@akarui/aoi.db"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 251,
					"name": "#getCurrentFile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 415,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L415"
						}
					],
					"signatures": [
						{
							"id": 252,
							"name": "#getCurrentFile",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Gets the current file"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The current file"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 415,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L415"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 243,
					"name": "#getHashLog",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 249,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L249"
						}
					],
					"signatures": [
						{
							"id": 244,
							"name": "#getHashLog",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Gets the hash of the transaction log"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The hash of the transaction log"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 249,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L249"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 237,
					"name": "#initialize",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 102,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L102"
						}
					],
					"signatures": [
						{
							"id": 238,
							"name": "#initialize",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Initializes the table"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 102,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L102"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 249,
					"name": "#set",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 315,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L315"
						}
					],
					"signatures": [
						{
							"id": 250,
							"name": "#set",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Sets the data in the file"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 315,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L315"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 241,
					"name": "#syncWithLogs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 209,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L209"
						}
					],
					"signatures": [
						{
							"id": 242,
							"name": "#syncWithLogs",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Syncs the table with the transaction log"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 209,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L209"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 245,
					"name": "#wal",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 278,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L278"
						}
					],
					"signatures": [
						{
							"id": 246,
							"name": "#wal",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Writes to the transaction log"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 278,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L278"
								}
							],
							"parameters": [
								{
									"id": 247,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "data to write to the transaction log"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 86,
										"name": "default",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 248,
									"name": "method",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the method used when wal was called"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14,
										"name": "DatabaseMethod",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 330,
					"name": "addListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 390,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 331,
							"name": "addListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Alias for "
									},
									{
										"kind": "code",
										"text": "`emitter.on(eventName, listener)`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 390,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 332,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 333,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 334,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 390,
													"character": 66
												}
											],
											"signatures": [
												{
													"id": 335,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 390,
															"character": 66
														}
													],
													"parameters": [
														{
															"id": 336,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 168,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.addListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.addListener"
					}
				},
				{
					"id": 313,
					"name": "all",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 991,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L991"
						}
					],
					"signatures": [
						{
							"id": 314,
							"name": "all",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValueTable>.all(() => true, 10) // returns the first 10 data\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 991,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L991"
								}
							],
							"parameters": [
								{
									"id": 315,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The query to find the data"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 316,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/table.ts",
													"line": 991,
													"character": 22,
													"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L991"
												}
											],
											"signatures": [
												{
													"id": 317,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/KeyValue/src/table.ts",
															"line": 991,
															"character": 22,
															"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L991"
														}
													],
													"parameters": [
														{
															"id": 318,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 86,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														},
														{
															"id": 319,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								},
								{
									"id": 320,
									"name": "limit",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The limit of the data"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 86,
											"name": "default",
											"package": "@akarui/aoi.db"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 291,
					"name": "clear",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 800,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L800"
						}
					],
					"signatures": [
						{
							"id": 292,
							"name": "clear",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Clears the table"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValueTable>.clear()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 800,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L800"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 282,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 668,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L668"
						}
					],
					"signatures": [
						{
							"id": 283,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Deletes the data"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValueTable>.delete(\"key\")\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 668,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L668"
								}
							],
							"parameters": [
								{
									"id": 284,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The key of the data"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 86,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 323,
					"name": "deleteMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 1176,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L1176"
						}
					],
					"signatures": [
						{
							"id": 324,
							"name": "deleteMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Deletes the data"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The data deleted if query is provided else boolean if whole table is cleared"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValueTable>.deleteMany((v, index) => v.value === \"value\")\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 1176,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L1176"
								}
							],
							"parameters": [
								{
									"id": 325,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The query to find the data"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 326,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/table.ts",
													"line": 1176,
													"character": 29,
													"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L1176"
												}
											],
											"signatures": [
												{
													"id": 327,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/KeyValue/src/table.ts",
															"line": 1176,
															"character": 29,
															"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L1176"
														}
													],
													"parameters": [
														{
															"id": 328,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 86,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														},
														{
															"id": 329,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": true
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 86,
													"name": "default",
													"package": "@akarui/aoi.db"
												}
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 379,
					"name": "emit",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 652,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 380,
							"name": "emit",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronously calls each of the listeners registered for the event named"
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ", in the order they were registered, passing the supplied arguments\nto each.\n\nReturns "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if the event had listeners, "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " otherwise.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEmitter = new EventEmitter();\n\n// First listener\nmyEmitter.on('event', function firstListener() {\n  console.log('Helloooo! first listener');\n});\n// Second listener\nmyEmitter.on('event', function secondListener(arg1, arg2) {\n  console.log(`event with parameters ${arg1}, ${arg2} in second listener`);\n});\n// Third listener\nmyEmitter.on('event', function thirdListener(...args) {\n  const parameters = args.join(', ');\n  console.log(`event with parameters ${parameters} in third listener`);\n});\n\nconsole.log(myEmitter.listeners('event'));\n\nmyEmitter.emit('event', 1, 2, 3, 4, 5);\n\n// Prints:\n// [\n//   [Function: firstListener],\n//   [Function: secondListener],\n//   [Function: thirdListener]\n// ]\n// Helloooo! first listener\n// event with parameters 1, 2 in second listener\n// event with parameters 1, 2, 3, 4, 5 in third listener\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 652,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 381,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 382,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.emit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.emit"
					}
				},
				{
					"id": 401,
					"name": "eventNames",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 715,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 402,
							"name": "eventNames",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or "
									},
									{
										"kind": "code",
										"text": "`Symbol`"
									},
									{
										"kind": "text",
										"text": "s.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\n\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 715,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.eventNames"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.eventNames"
					}
				},
				{
					"id": 306,
					"name": "findMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 936,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L936"
						}
					],
					"signatures": [
						{
							"id": 307,
							"name": "findMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValueTable>.findMany((v, index) => v.value === \"value\")\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 936,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L936"
								}
							],
							"parameters": [
								{
									"id": 308,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The query to find the data"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 309,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/table.ts",
													"line": 936,
													"character": 26,
													"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L936"
												}
											],
											"signatures": [
												{
													"id": 310,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/KeyValue/src/table.ts",
															"line": 936,
															"character": 26,
															"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L936"
														}
													],
													"parameters": [
														{
															"id": 311,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 86,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														},
														{
															"id": 312,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 86,
											"name": "default",
											"package": "@akarui/aoi.db"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 299,
					"name": "findOne",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 882,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L882"
						}
					],
					"signatures": [
						{
							"id": 300,
							"name": "findOne",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Finds the data"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The data"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValueTable>.findOne((v, index) => v.value === \"value\")\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 882,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L882"
								}
							],
							"parameters": [
								{
									"id": 301,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The query to find the data"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 302,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/table.ts",
													"line": 882,
													"character": 25,
													"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L882"
												}
											],
											"signatures": [
												{
													"id": 303,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/KeyValue/src/table.ts",
															"line": 882,
															"character": 25,
															"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L882"
														}
													],
													"parameters": [
														{
															"id": 304,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 86,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														},
														{
															"id": 305,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 86,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 321,
					"name": "fullRepair",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 1007,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L1007"
						}
					],
					"signatures": [
						{
							"id": 322,
							"name": "fullRepair",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Executes a full repair on the table"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n<KeyValueTable>.fullRepair()\n```"
											}
										]
									},
									{
										"tag": "@note",
										"content": [
											{
												"kind": "text",
												"text": "This method is very slow and should only be used when the table is corrupted"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 1007,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L1007"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 275,
					"name": "get",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 600,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L600"
						}
					],
					"signatures": [
						{
							"id": 276,
							"name": "get",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Get the value for the key"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValueTable>.get(\"key\")\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 600,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L600"
								}
							],
							"parameters": [
								{
									"id": 277,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The key of the data"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 86,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 262,
					"name": "getLogs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 547,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L547"
						}
					],
					"signatures": [
						{
							"id": 263,
							"name": "getLogs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "get the transaction log"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The transaction log"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValueTable>.getLogs()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 547,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L547"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 264,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 265,
														"name": "key",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "lib/KeyValue/src/table.ts",
																"line": 551,
																"character": 12,
																"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L551"
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 269,
														"name": "method",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "lib/KeyValue/src/table.ts",
																"line": 555,
																"character": 12,
																"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L555"
															}
														],
														"type": {
															"type": "reference",
															"target": 14,
															"name": "DatabaseMethod",
															"package": "@akarui/aoi.db"
														}
													},
													{
														"id": 268,
														"name": "ttl",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "lib/KeyValue/src/table.ts",
																"line": 554,
																"character": 12,
																"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L554"
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													},
													{
														"id": 267,
														"name": "type",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "lib/KeyValue/src/table.ts",
																"line": 553,
																"character": 12,
																"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L553"
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 266,
														"name": "value",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "lib/KeyValue/src/table.ts",
																"line": 552,
																"character": 12,
																"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L552"
															}
														],
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															]
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															265,
															269,
															268,
															267,
															266
														]
													}
												],
												"sources": [
													{
														"fileName": "lib/KeyValue/src/table.ts",
														"line": 550,
														"character": 28,
														"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L550"
													}
												]
											}
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 371,
					"name": "getMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 567,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 372,
							"name": "getMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current max listener value for the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " which is either\nset by "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners(n)`"
									},
									{
										"kind": "text",
										"text": " or defaults to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "defaultMaxListeners",
										"target": 198
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v1.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 567,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.getMaxListeners"
					}
				},
				{
					"id": 293,
					"name": "has",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 839,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L839"
						}
					],
					"signatures": [
						{
							"id": 294,
							"name": "has",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Checks if the key exists"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValueTable>.has(\"key\")\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 839,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L839"
								}
							],
							"parameters": [
								{
									"id": 295,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The key of the data"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 383,
					"name": "listenerCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 661,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 384,
							"name": "listenerCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of listeners listening for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\nIf "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " is provided, it will return how many times the listener is found\nin the list of the listeners of the event."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v3.2.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 661,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 385,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event being listened for"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 386,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The event handler function"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listenerCount"
					}
				},
				{
					"id": 373,
					"name": "listeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 580,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 374,
							"name": "listeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 580,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 375,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listeners"
					}
				},
				{
					"id": 358,
					"name": "off",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 540,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 359,
							"name": "off",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Alias for "
									},
									{
										"kind": "code",
										"text": "`emitter.removeListener()`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v10.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 540,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 360,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 361,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 362,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 540,
													"character": 58
												}
											],
											"signatures": [
												{
													"id": 363,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 540,
															"character": 58
														}
													],
													"parameters": [
														{
															"id": 364,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 168,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.off"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.off"
					}
				},
				{
					"id": 337,
					"name": "on",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 422,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 338,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function to the end of the listeners array for the\nevent named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". No checks are made to see if the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " has\nalready been added. Multiple calls passing the same combination of "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "and "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " will result in the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " being added, and called, multiple\ntimes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The"
									},
									{
										"kind": "code",
										"text": "`emitter.prependListener()`"
									},
									{
										"kind": "text",
										"text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => console.log('a'));\nmyEE.prependListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.101"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 422,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 339,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 340,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 341,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 422,
													"character": 57
												}
											],
											"signatures": [
												{
													"id": 342,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 422,
															"character": 57
														}
													],
													"parameters": [
														{
															"id": 343,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 168,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.on"
					}
				},
				{
					"id": 344,
					"name": "once",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 452,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 345,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a **one-time**"
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". The\nnext time "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " is triggered, this listener is removed and then invoked.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.once('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The"
									},
									{
										"kind": "code",
										"text": "`emitter.prependOnceListener()`"
									},
									{
										"kind": "text",
										"text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEE = new EventEmitter();\nmyEE.once('foo', () => console.log('a'));\nmyEE.prependOnceListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.3.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 452,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 346,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 347,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 348,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 452,
													"character": 59
												}
											],
											"signatures": [
												{
													"id": 349,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 452,
															"character": 59
														}
													],
													"parameters": [
														{
															"id": 350,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 168,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.once"
					}
				},
				{
					"id": 387,
					"name": "prependListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 679,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 388,
							"name": "prependListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function to the _beginning_ of the listeners array for the\nevent named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". No checks are made to see if the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " has\nalready been added. Multiple calls passing the same combination of "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "and "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " will result in the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " being added, and called, multiple\ntimes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 679,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 389,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 390,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 391,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 679,
													"character": 70
												}
											],
											"signatures": [
												{
													"id": 392,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 679,
															"character": 70
														}
													],
													"parameters": [
														{
															"id": 393,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 168,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.prependListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.prependListener"
					}
				},
				{
					"id": 394,
					"name": "prependOnceListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 695,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 395,
							"name": "prependOnceListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a **one-time**"
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " to the _beginning_ of the listeners array. The next time "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " is triggered, this\nlistener is removed, and then invoked.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 695,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 396,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 397,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 398,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 695,
													"character": 74
												}
											],
											"signatures": [
												{
													"id": 399,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 695,
															"character": 74
														}
													],
													"parameters": [
														{
															"id": 400,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 168,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.prependOnceListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.prependOnceListener"
					}
				},
				{
					"id": 376,
					"name": "rawListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 611,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 377,
							"name": "rawListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ",\nincluding any wrappers (such as those created by "
									},
									{
										"kind": "code",
										"text": "`.once()`"
									},
									{
										"kind": "text",
										"text": ").\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v9.4.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 611,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 378,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.rawListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.rawListeners"
					}
				},
				{
					"id": 365,
					"name": "removeAllListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 551,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 366,
							"name": "removeAllListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes all listeners, or those of the specified "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 551,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 367,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 168,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.removeAllListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.removeAllListeners"
					}
				},
				{
					"id": 351,
					"name": "removeListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 535,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 352,
							"name": "removeListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes the specified "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " from the listener array for the event named"
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```"
									},
									{
										"kind": "text",
										"text": "\n\n"
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ", then "
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any"
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`removeAllListeners()`"
									},
									{
										"kind": "text",
										"text": " calls _after_ emitting and _before_ the last listener finishes execution\nwill not remove them from"
									},
									{
										"kind": "code",
										"text": "`emit()`"
									},
									{
										"kind": "text",
										"text": " in progress. Subsequent events behave as expected.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nclass MyEmitter extends EventEmitter {}\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```"
									},
									{
										"kind": "text",
										"text": "\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe "
									},
									{
										"kind": "code",
										"text": "`emitter.listeners()`"
									},
									{
										"kind": "text",
										"text": " method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), "
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " will remove the most\nrecently added instance. In the example the "
									},
									{
										"kind": "code",
										"text": "`once('ping')`"
									},
									{
										"kind": "text",
										"text": "listener is removed:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 535,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 353,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 354,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 355,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 535,
													"character": 69
												}
											],
											"signatures": [
												{
													"id": 356,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 535,
															"character": 69
														}
													],
													"parameters": [
														{
															"id": 357,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 168,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.removeListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.removeListener"
					}
				},
				{
					"id": 255,
					"name": "set",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/table.ts",
							"line": 476,
							"character": 10,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L476"
						}
					],
					"signatures": [
						{
							"id": 256,
							"name": "set",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Sets the data in the file"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValueTable>.set(\"key\", {\n value: \"value\",\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/table.ts",
									"line": 476,
									"character": 4,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L476"
								}
							],
							"parameters": [
								{
									"id": 257,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The key of the data"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 258,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value of the data"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 613,
												"name": "KeyValueDataInterface",
												"package": "@akarui/aoi.db"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 86,
										"name": "default",
										"package": "@akarui/aoi.db"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 368,
					"name": "setMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 561,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 369,
							"name": "setMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "By default "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s will print a warning if more than "
									},
									{
										"kind": "code",
										"text": "`10`"
									},
									{
										"kind": "text",
										"text": " listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners()`"
									},
									{
										"kind": "text",
										"text": " method allows the limit to be\nmodified for this specific "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instance. The value can be set to"
									},
									{
										"kind": "code",
										"text": "`Infinity`"
									},
									{
										"kind": "text",
										"text": " (or "
									},
									{
										"kind": "code",
										"text": "`0`"
									},
									{
										"kind": "text",
										"text": ") to indicate an unlimited number of listeners.\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.3.5"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 561,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 370,
									"name": "n",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 168,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.setMaxListeners"
					}
				},
				{
					"id": 187,
					"name": "getEventListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 296,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 188,
							"name": "getEventListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s this behaves exactly the same as calling "
									},
									{
										"kind": "code",
										"text": "`.listeners`"
									},
									{
										"kind": "text",
										"text": " on\nthe emitter.\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventTarget`"
									},
									{
										"kind": "text",
										"text": "s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { getEventListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  console.log(getEventListeners(ee, 'foo')); // [ [Function: listener] ]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  console.log(getEventListeners(et, 'foo')); // [ [Function: listener] ]\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v15.2.0, v14.17.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 296,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 189,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/events.d.ts",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												"name": "EventEmitter",
												"package": "@types/node",
												"qualifiedName": "__global.NodeJS.EventEmitter"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/events.d.ts",
													"qualifiedName": "_DOMEventTarget"
												},
												"name": "_DOMEventTarget",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 190,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getEventListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.getEventListeners"
					}
				},
				{
					"id": 183,
					"name": "listenerCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 268,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 184,
							"name": "listenerCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A class method that returns the number of listeners for the given "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "registered on the given "
									},
									{
										"kind": "code",
										"text": "`emitter`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, listenerCount } from 'node:events';\n\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.9.12"
											}
										]
									},
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Since v3.2.0 - Use "
											},
											{
												"kind": "code",
												"text": "`listenerCount`"
											},
											{
												"kind": "text",
												"text": " instead."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 268,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 185,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The emitter to query"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "__global.NodeJS.EventEmitter"
										},
										"name": "EventEmitter",
										"package": "@types/node",
										"qualifiedName": "__global.NodeJS.EventEmitter"
									}
								},
								{
									"id": 186,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The event name"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listenerCount"
					}
				},
				{
					"id": 178,
					"name": "on",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 250,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 179,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\n// Emit later on\nprocess.nextTick(() => {\n  ee.emit('foo', 'bar');\n  ee.emit('foo', 42);\n});\n\nfor await (const event of on(ee, 'foo')) {\n  // The execution of this inner block is synchronous and it\n  // processes one event at a time (even with await). Do not use\n  // if concurrent execution is required.\n  console.log(event); // prints ['bar'] [42]\n}\n// Unreachable here\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns an "
									},
									{
										"kind": "code",
										"text": "`AsyncIterator`"
									},
									{
										"kind": "text",
										"text": " that iterates "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " events. It will throw\nif the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": ". It removes all listeners when\nexiting the loop. The "
									},
									{
										"kind": "code",
										"text": "`value`"
									},
									{
										"kind": "text",
										"text": " returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": " can be used to cancel waiting on events:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v13.6.0, v12.16.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "that iterates "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " events emitted by the "
											},
											{
												"kind": "code",
												"text": "`emitter`"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 250,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 180,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "__global.NodeJS.EventEmitter"
										},
										"name": "EventEmitter",
										"package": "@types/node",
										"qualifiedName": "__global.NodeJS.EventEmitter"
									}
								},
								{
									"id": 181,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event being listened for"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 182,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es2018.asynciterable.d.ts",
									"qualifiedName": "AsyncIterableIterator"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "AsyncIterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.on"
					}
				},
				{
					"id": 169,
					"name": "once",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 189,
							"character": 15
						},
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 190,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 170,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a "
									},
									{
										"kind": "code",
										"text": "`Promise`"
									},
									{
										"kind": "text",
										"text": " that is fulfilled when the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits the given\nevent or that is rejected if the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " while waiting.\nThe "
									},
									{
										"kind": "code",
										"text": "`Promise`"
									},
									{
										"kind": "text",
										"text": " will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special"
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event\nsemantics and does not listen to the "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { once, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\nprocess.nextTick(() => {\n  ee.emit('myevent', 42);\n});\n\nconst [value] = await once(ee, 'myevent');\nconsole.log(value);\n\nconst err = new Error('kaboom');\nprocess.nextTick(() => {\n  ee.emit('error', err);\n});\n\ntry {\n  await once(ee, 'myevent');\n} catch (err) {\n  console.error('error happened', err);\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThe special handling of the "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event is only used when "
									},
									{
										"kind": "code",
										"text": "`events.once()`"
									},
									{
										"kind": "text",
										"text": "is used to wait for another event. If "
									},
									{
										"kind": "code",
										"text": "`events.once()`"
									},
									{
										"kind": "text",
										"text": " is used to wait for the\n'"
									},
									{
										"kind": "code",
										"text": "`error'`"
									},
									{
										"kind": "text",
										"text": " event itself, then it is treated as any other kind of event without\nspecial handling:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.error('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```"
									},
									{
										"kind": "text",
										"text": "\n\nAn "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": " can be used to cancel waiting for the event:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v11.13.0, v10.16.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 189,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 171,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "_NodeEventTarget"
										},
										"name": "_NodeEventTarget",
										"package": "@types/node"
									}
								},
								{
									"id": 172,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 173,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						},
						{
							"id": 174,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 190,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 175,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "_DOMEventTarget"
										},
										"name": "_DOMEventTarget",
										"package": "@types/node"
									}
								},
								{
									"id": 176,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 177,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.once"
					}
				},
				{
					"id": 191,
					"name": "setMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 311,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 192,
							"name": "setMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "```js\nimport { setMaxListeners, EventEmitter } from 'node:events';\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v15.4.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 311,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 193,
									"name": "n",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A non-negative number. The maximum number of listeners per "
											},
											{
												"kind": "code",
												"text": "`EventTarget`"
											},
											{
												"kind": "text",
												"text": " event."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 194,
									"name": "eventTargets",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/@types/node/events.d.ts",
														"qualifiedName": "__global.NodeJS.EventEmitter"
													},
													"name": "EventEmitter",
													"package": "@types/node",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/@types/node/events.d.ts",
														"qualifiedName": "_DOMEventTarget"
													},
													"name": "_DOMEventTarget",
													"package": "@types/node"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.setMaxListeners"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						199
					]
				},
				{
					"title": "Properties",
					"children": [
						219,
						225,
						215,
						220,
						204,
						209,
						231,
						214,
						203,
						205,
						230,
						229,
						236,
						196,
						197,
						198,
						195
					]
				},
				{
					"title": "Accessors",
					"children": [
						270
					]
				},
				{
					"title": "Methods",
					"children": [
						239,
						253,
						285,
						289,
						296,
						259,
						278,
						251,
						243,
						237,
						249,
						241,
						245,
						330,
						313,
						291,
						282,
						323,
						379,
						401,
						306,
						299,
						321,
						275,
						262,
						371,
						293,
						383,
						373,
						358,
						337,
						344,
						387,
						394,
						376,
						365,
						351,
						255,
						368,
						187,
						183,
						178,
						169,
						191
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/src/table.ts",
					"line": 42,
					"character": 21,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/src/table.ts#L42"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "node_modules/@types/node/events.d.ts",
						"qualifiedName": "EventEmitter"
					},
					"name": "EventEmitter",
					"package": "@types/node"
				}
			]
		},
		{
			"id": 624,
			"name": "CacherOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 625,
					"name": "cache",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 58,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L58"
						}
					],
					"type": {
						"type": "reference",
						"target": 7,
						"name": "CacheType",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 626,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 59,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L59"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 628,
					"name": "sortFunction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 61,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L61"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 629,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/typings/interface.ts",
									"line": 61,
									"character": 19,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L61"
								}
							],
							"signatures": [
								{
									"id": 630,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/KeyValue/typings/interface.ts",
											"line": 61,
											"character": 19,
											"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L61"
										}
									],
									"parameters": [
										{
											"id": 631,
											"name": "a",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 632,
											"name": "b",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						}
					}
				},
				{
					"id": 627,
					"name": "sorted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 60,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L60"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						625,
						626,
						628,
						627
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/typings/interface.ts",
					"line": 57,
					"character": 17,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L57"
				}
			]
		},
		{
			"id": 1,
			"name": "Hash",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 3,
					"name": "encrypted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/interface.ts",
							"line": 3,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/interface.ts#L3"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2,
					"name": "iv",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/interface.ts",
							"line": 2,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/interface.ts#L2"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3,
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/typings/interface.ts",
					"line": 1,
					"character": 17,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/interface.ts#L1"
				}
			]
		},
		{
			"id": 601,
			"name": "KeyValueCacheConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 602,
					"name": "cache",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 29,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L29"
						}
					],
					"type": {
						"type": "reference",
						"target": 7,
						"name": "CacheType",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 604,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 31,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L31"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 603,
					"name": "reference",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 30,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L30"
						}
					],
					"type": {
						"type": "reference",
						"target": 41,
						"name": "ReferenceType",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 606,
					"name": "sortFunction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 33,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L33"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 607,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/typings/interface.ts",
									"line": 33,
									"character": 19,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L33"
								}
							],
							"signatures": [
								{
									"id": 608,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/KeyValue/typings/interface.ts",
											"line": 33,
											"character": 19,
											"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L33"
										}
									],
									"parameters": [
										{
											"id": 609,
											"name": "a",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 610,
											"name": "b",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						}
					}
				},
				{
					"id": 605,
					"name": "sorted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 32,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L32"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						602,
						604,
						603,
						606,
						605
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/typings/interface.ts",
					"line": 28,
					"character": 17,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L28"
				}
			]
		},
		{
			"id": 590,
			"name": "KeyValueDataConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 591,
					"name": "path",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 12,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L12"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 593,
					"name": "referencePath",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 14,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L14"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 592,
					"name": "tables",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 13,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L13"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						591,
						593,
						592
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/typings/interface.ts",
					"line": 11,
					"character": 17,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L11"
				}
			]
		},
		{
			"id": 613,
			"name": "KeyValueDataInterface",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 614,
					"name": "file",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 42,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L42"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 616,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 44,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L44"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 617,
					"name": "ttl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 45,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L45"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 618,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 46,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L46"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 615,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 43,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L43"
						}
					],
					"type": {
						"type": "reference",
						"target": 635,
						"name": "KeyValueDataValueType",
						"package": "@akarui/aoi.db"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						614,
						616,
						617,
						618,
						615
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/typings/interface.ts",
					"line": 41,
					"character": 17,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L41"
				}
			]
		},
		{
			"id": 598,
			"name": "KeyValueEncryptionConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 600,
					"name": "encriptData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 25,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L25"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 599,
					"name": "securityKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 24,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L24"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						600,
						599
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/typings/interface.ts",
					"line": 23,
					"character": 17,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L23"
				}
			]
		},
		{
			"id": 594,
			"name": "KeyValueFileConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 595,
					"name": "extension",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 18,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L18"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 597,
					"name": "maxSize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 20,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L20"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 596,
					"name": "transactionLogPath",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 19,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L19"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						595,
						597,
						596
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/typings/interface.ts",
					"line": 17,
					"character": 17,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L17"
				}
			]
		},
		{
			"id": 619,
			"name": "KeyValueJSONOption",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 621,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 52,
							"character": 2,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L52"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 622,
					"name": "ttl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 53,
							"character": 2,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L53"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 623,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 54,
							"character": 2,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L54"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 620,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 51,
							"character": 2,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L51"
						}
					],
					"type": {
						"type": "reference",
						"target": 635,
						"name": "KeyValueDataValueType",
						"package": "@akarui/aoi.db"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						621,
						622,
						623,
						620
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/typings/interface.ts",
					"line": 50,
					"character": 17,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L50"
				}
			]
		},
		{
			"id": 585,
			"name": "KeyValueOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 589,
					"name": "cacheConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 8,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L8"
						}
					],
					"type": {
						"type": "reference",
						"target": 601,
						"name": "KeyValueCacheConfig",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 586,
					"name": "dataConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 5,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L5"
						}
					],
					"type": {
						"type": "reference",
						"target": 590,
						"name": "KeyValueDataConfig",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 588,
					"name": "encryptionConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 7,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L7"
						}
					],
					"type": {
						"type": "reference",
						"target": 598,
						"name": "KeyValueEncryptionConfig",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 587,
					"name": "fileConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 6,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L6"
						}
					],
					"type": {
						"type": "reference",
						"target": 594,
						"name": "KeyValueFileConfig",
						"package": "@akarui/aoi.db"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						589,
						586,
						588,
						587
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/typings/interface.ts",
					"line": 4,
					"character": 17,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L4"
				}
			]
		},
		{
			"id": 611,
			"name": "KeyValueTableOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 612,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 37,
							"character": 4,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L37"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						612
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/typings/interface.ts",
					"line": 36,
					"character": 17,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/interface.ts#L36"
				}
			]
		},
		{
			"id": 633,
			"name": "DeepRequired",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/KeyValue/typings/type.ts",
					"line": 1,
					"character": 12,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/type.ts#L1"
				}
			],
			"typeParameters": [
				{
					"id": 634,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						},
						"templateType": {
							"type": "reference",
							"target": 633,
							"typeArguments": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": -1,
										"name": "K",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							],
							"name": "DeepRequired",
							"package": "@akarui/aoi.db"
						}
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Required"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						],
						"name": "Required",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 635,
			"name": "KeyValueDataValueType",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/KeyValue/typings/type.ts",
					"line": 3,
					"character": 12,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/type.ts#L3"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 635,
							"name": "KeyValueDataValueType",
							"package": "@akarui/aoi.db"
						}
					},
					{
						"type": "reference",
						"target": 636,
						"name": "ValidJSON",
						"package": "@akarui/aoi.db"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 4,
			"name": "Optional",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/typings/type.ts",
					"line": 1,
					"character": 12,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/typings/type.ts#L1"
				}
			],
			"typeParameters": [
				{
					"id": 5,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 6,
					"name": "K",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Pick"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								],
								"name": "Partial",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": -1,
								"name": "K",
								"refersToTypeParameter": true
							}
						],
						"name": "Pick",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": -1,
								"name": "K",
								"refersToTypeParameter": true
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 636,
			"name": "ValidJSON",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/KeyValue/typings/type.ts",
					"line": 13,
					"character": 12,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/type.ts#L13"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 637,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/type.ts",
							"line": 13,
							"character": 24,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/type.ts#L13"
						}
					],
					"indexSignature": {
						"id": 638,
						"name": "__index",
						"variant": "signature",
						"kind": 8192,
						"flags": {},
						"sources": [
							{
								"fileName": "lib/KeyValue/typings/type.ts",
								"line": 14,
								"character": 4,
								"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/type.ts#L14"
							}
						],
						"parameters": [
							{
								"id": 639,
								"name": "x",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									]
								}
							}
						],
						"type": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 636,
									"name": "ValidJSON",
									"package": "@akarui/aoi.db"
								},
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": 636,
										"name": "ValidJSON",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"type": "literal",
									"value": null
								},
								{
									"type": "intrinsic",
									"name": "boolean"
								},
								{
									"type": "intersection",
									"types": [
										{
											"type": "intrinsic",
											"name": "unknown"
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 640,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 641,
														"name": "toJSON",
														"variant": "declaration",
														"kind": 2048,
														"flags": {},
														"sources": [
															{
																"fileName": "lib/KeyValue/typings/type.ts",
																"line": 21,
																"character": 23,
																"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/type.ts#L21"
															}
														],
														"signatures": [
															{
																"id": 642,
																"name": "toJSON",
																"variant": "signature",
																"kind": 4096,
																"flags": {},
																"sources": [
																	{
																		"fileName": "lib/KeyValue/typings/type.ts",
																		"line": 21,
																		"character": 23,
																		"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/type.ts#L21"
																	}
																],
																"type": {
																	"type": "reference",
																	"target": 636,
																	"name": "ValidJSON",
																	"package": "@akarui/aoi.db"
																}
															}
														]
													}
												],
												"groups": [
													{
														"title": "Methods",
														"children": [
															641
														]
													}
												],
												"sources": [
													{
														"fileName": "lib/KeyValue/typings/type.ts",
														"line": 21,
														"character": 21,
														"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/KeyValue/typings/type.ts#L21"
													}
												]
											}
										}
									]
								}
							]
						}
					}
				}
			}
		},
		{
			"id": 671,
			"name": "ReferenceConstantSpace",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "lib/utils.ts",
					"line": 31,
					"character": 13,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/utils.ts#L31"
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			},
			"defaultValue": "..."
		},
		{
			"id": 665,
			"name": "JSONParser",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/utils.ts",
					"line": 45,
					"character": 16,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/utils.ts#L45"
				}
			],
			"signatures": [
				{
					"id": 666,
					"name": "JSONParser",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/utils.ts",
							"line": 45,
							"character": 0,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/utils.ts#L45"
						}
					],
					"parameters": [
						{
							"id": 667,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 668,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 669,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/utils.ts",
											"line": 48,
											"character": 12,
											"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/utils.ts#L48"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": "..."
								},
								{
									"id": 670,
									"name": "isBroken",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/utils.ts",
											"line": 49,
											"character": 12,
											"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/utils.ts#L49"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										669,
										670
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/utils.ts",
									"line": 47,
									"character": 15,
									"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/utils.ts#L47"
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 655,
			"name": "createHash",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/utils.ts",
					"line": 36,
					"character": 17,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/utils.ts#L36"
				}
			],
			"signatures": [
				{
					"id": 656,
					"name": "createHash",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/utils.ts",
							"line": 36,
							"character": 0,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/utils.ts#L36"
						}
					],
					"parameters": [
						{
							"id": 657,
							"name": "string",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 658,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 659,
							"name": "iv",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 652,
			"name": "createHashRawString",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/utils.ts",
					"line": 32,
					"character": 16,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/utils.ts#L32"
				}
			],
			"signatures": [
				{
					"id": 653,
					"name": "createHashRawString",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/utils.ts",
							"line": 32,
							"character": 0,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/utils.ts#L32"
						}
					],
					"parameters": [
						{
							"id": 654,
							"name": "strings",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 660,
			"name": "decodeHash",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/utils.ts",
					"line": 40,
					"character": 16,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/utils.ts#L40"
				}
			],
			"signatures": [
				{
					"id": 661,
					"name": "decodeHash",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/utils.ts",
							"line": 40,
							"character": 0,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/utils.ts#L40"
						}
					],
					"parameters": [
						{
							"id": 662,
							"name": "hash",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 663,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 664,
							"name": "iv",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			]
		},
		{
			"id": 648,
			"name": "decrypt",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/utils.ts",
					"line": 16,
					"character": 16,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/utils.ts#L16"
				}
			],
			"signatures": [
				{
					"id": 649,
					"name": "decrypt",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/utils.ts",
							"line": 16,
							"character": 0,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/utils.ts#L16"
						}
					],
					"parameters": [
						{
							"id": 650,
							"name": "hash",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1,
								"name": "Hash",
								"package": "@akarui/aoi.db"
							}
						},
						{
							"id": 651,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 643,
			"name": "encrypt",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/utils.ts",
					"line": 5,
					"character": 16,
					"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/utils.ts#L5"
				}
			],
			"signatures": [
				{
					"id": 644,
					"name": "encrypt",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/utils.ts",
							"line": 5,
							"character": 0,
							"url": "https://github.com/AkaruiDevelopment/aoi.db/blob/b75b30e/lib/utils.ts#L5"
						}
					],
					"parameters": [
						{
							"id": 645,
							"name": "string",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 646,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 647,
							"name": "iV",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 1,
						"name": "Hash",
						"package": "@akarui/aoi.db"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"children": [
				7,
				27,
				14,
				41
			]
		},
		{
			"title": "Classes",
			"children": [
				403,
				44,
				86,
				107,
				168
			]
		},
		{
			"title": "Interfaces",
			"children": [
				624,
				1,
				601,
				590,
				613,
				598,
				594,
				619,
				585,
				611
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				633,
				635,
				4,
				636
			]
		},
		{
			"title": "Variables",
			"children": [
				671
			]
		},
		{
			"title": "Functions",
			"children": [
				665,
				655,
				652,
				660,
				648,
				643
			]
		}
	],
	"packageName": "@akarui/aoi.db",
	"readme": [
		{
			"kind": "text",
			"text": "<h1 align=\"center\">@akarui/aoi.db</h1>\n\n<div align=\"center\">\n\n[![Discord Server](https://img.shields.io/discord/773352845738115102?color=5865F2&logo=discord&logoColor=white)](https://discord.com/invite/HMUfMXDQsV)\n[![NPM Downloads](https://img.shields.io/npm/dt/aoi.db.svg?maxAge=3600)](https://www.npmjs.com/package/aoi.db)\n[![NPM Version](https://img.shields.io/npm/v/aoi.db.svg?maxAge=3600)](https://www.npmjs.com/package/aoi.db)\n\n</div>\n\n## Table Of Contents\n\n- [Table Of Contents](#table-of-contents)\n- [About](#about)\n- [Installation](#installation)\n- [Types](#types)\n- [Setups](#setups)\n  - [KeyValue](#keyvalue)\n  - [WideColumn](#widecolumn)\n  - [Remote](#remote)\n    - [Setting up the database server](#setting-up-the-database-server)\n    - [Setting up the client](#setting-up-the-client)\n- [Links](#links)\n\n## About\nAoi.db is a collection of various database types to handle various types of data requirements!\n\n## Installation\n\n"
		},
		{
			"kind": "code",
			"text": "```bash\n#npm \nnpm i @akarui/aoi.db\n\n#yarn\nyarn add @akarui/aoi.db\n```"
		},
		{
			"kind": "text",
			"text": "\n\n## Types\n\n> * KeyValue - A simple database that stores key value pairs\n>   * Usage:  general purpose \n\n>\n> * WideColumn - A database that stores data in a column \n>   * Usage:  good for getting separate columns related to a primary column \n>\n\n>\n> * Remote - A database that stores data in a remote server\n>   * Usage:  good for separating database extensive usage from main project/process\n>\n\n## Setups\n\n### KeyValue\n\n"
		},
		{
			"kind": "code",
			"text": "```ts\n  const { KeyValue } = require(\"@akarui/aoi.db\") //commonjs\n  // or\n  import { KeyValue } from \"@akarui/aoi.db\" //esm\n\n  // Basic Setup\n  const db = new KeyValue({\n    path: \"./path/\",\n    tables: [\"table\"],\n  });\n\n  db.on(\"ready\", () => {\n    console.log(\"Database is ready!\");\n  });\n\n  db.connect();\n\n```"
		},
		{
			"kind": "text",
			"text": "\nReference: [KeyValue](https://akaruidevelopment.github.io/aoi.db/classes/KeyValue.html)\n\n### WideColumn\n\n"
		},
		{
			"kind": "code",
			"text": "```ts\n  const { WideColumn, Column } = require(\"@akarui/aoi.db\") //commonjs\n  // or\n  import { WideColumn, Column } from \"@akarui/aoi.db\" //esm\n\n  // Basic Setup\n\n  const prime = new Column({\n    name: \"id\",\n    primary: true,\n    type: \"bigint\",\n    default:0n,\n  });\n  const xp = new Column({\n    name: \"xp\",\n    type: \"number\",\n    primary: false,\n    sortOrder: \"DESC\",\n    default : 0,\n  });\n\n  const db = new WideColumn({\n    path: \"./path/\",\n    encryptOption: {\n      securitykey: \"a-32-characters-long-string-here\",\n    },\n    tables: [\n      {\n        name: \"main\",\n        columns: [prime, xp ],\n      },\n    ],\n  });\n\n  db.on(\"ready\", () => {\n    console.log(\"Database is ready!\");\n  });\n\n  db.connect();\n\n```"
		},
		{
			"kind": "text",
			"text": "\nReference: [WideColumn](https://akaruidevelopment.github.io/aoi.db/classes/WideColumn.html)\n\n\n### Remote\n\n#### Setting up the database server\n\n"
		},
		{
			"kind": "code",
			"text": "```js\nconst { Receiver } = require(\"@akarui/aoi.db\"); //commonjs\n// or\nimport { Receiver } from \"@akarui/aoi.db\"; //esm\n\nconst rec = new Receiver({\n  logEncrypt: \"a-32-characters-long-string-here\",\n  logPath: \"./logPath/\",\n  wsOptions: {\n    port: portNo, // 443 for ssl wss and 80 for ws\n    clientTracking: true,\n  },\n  whitelistedIps: \"*\",\n});\n\nrec.on(\"connect\", () => {\n  console.log(\"connected\");\n});\n\nrec.connect();\n\n```"
		},
		{
			"kind": "text",
			"text": "\nReference: [Receiver](https://akaruidevelopment.github.io/aoi.db/classes/Receiver.html)\n\n#### Setting up the client\n\n"
		},
		{
			"kind": "code",
			"text": "```js\n\nconst { Transmitter, TransmitterFlags } = require(\"@akarui/aoi.db\"); //commonjs\n// or\nimport { Transmitter, TransmitterFlags } from \"@akarui/aoi.db\"; //esm\n\nconst db = new Transmitter({\n  path: \"websocket path\",\n  //path : \"ws://localhost:80\",\n  databaseType: \"KeyValue or WideColumn\",\n  dbOptions: {\n    path: \"./databasePath in remote server/\",\n    encryptOption: {\n      securitykey: \"a-32-characters-long-string-here\",\n      enabled: true,\n    },\n  },\n  name: \"username\",\n  pass: \"password\",\n  flags: TransmitterFlags.READ_WRITE, //READ_WRITE, READ_ONLY, WRITE_ONLY\n  tables: [\"table\"],\n});\n\ndb.on(\"ready\", () => {\n  console.log(\"ready\");\n});\ndb.on(\"close\", (code, reason) => {\n  console.log(\"[TRANSMITTER] => \" + code + \" \" + reason);\n});\ndb.connect();\n```"
		},
		{
			"kind": "text",
			"text": "\nReference: [Transmitter](https://akaruidevelopment.github.io/aoi.db/classes/Transmitter.html)\n\n\n## Links\n\n- [Documentation](https://akaruidevelopment.github.io/aoi.db/)\n- [Discord Server](https://discord.com/invite/HMUfMXDQsV)\n- [NPM](https://www.npmjs.com/package/@akarui/aoi.db)\n- [Github](https://github.com/Akaruidevelopment/aoi.db)"
		}
	],
	"symbolIdMap": {
		"0": {
			"sourceFileName": "lib/index.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "lib/typings/interface.ts",
			"qualifiedName": "Hash"
		},
		"2": {
			"sourceFileName": "lib/typings/interface.ts",
			"qualifiedName": "Hash.iv"
		},
		"3": {
			"sourceFileName": "lib/typings/interface.ts",
			"qualifiedName": "Hash.encrypted"
		},
		"4": {
			"sourceFileName": "lib/typings/type.ts",
			"qualifiedName": "Optional"
		},
		"5": {
			"sourceFileName": "lib/typings/type.ts",
			"qualifiedName": "T"
		},
		"6": {
			"sourceFileName": "lib/typings/type.ts",
			"qualifiedName": "K"
		},
		"7": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "CacheType"
		},
		"8": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "CacheType.LRU"
		},
		"9": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "CacheType.MRU"
		},
		"10": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "CacheType.LFU"
		},
		"11": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "CacheType.MFU"
		},
		"12": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "CacheType.FIFO"
		},
		"13": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "CacheType.FILO"
		},
		"14": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod"
		},
		"15": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.Set"
		},
		"16": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.Delete"
		},
		"17": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.Flush"
		},
		"18": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.Clear"
		},
		"19": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.Replicate"
		},
		"20": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.Backup"
		},
		"21": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.Restore"
		},
		"22": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.NewFile"
		},
		"23": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.Ping"
		},
		"24": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.Get"
		},
		"25": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.All"
		},
		"26": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.Has"
		},
		"27": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents"
		},
		"28": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.Connect"
		},
		"29": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.Error"
		},
		"30": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.Set"
		},
		"31": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.Get"
		},
		"32": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.Delete"
		},
		"33": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.Flush"
		},
		"34": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.Clear"
		},
		"35": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.Replicate"
		},
		"36": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.Backup"
		},
		"37": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.Restore"
		},
		"38": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.Disconnect"
		},
		"39": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.TableReady"
		},
		"40": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.Debug"
		},
		"41": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "ReferenceType"
		},
		"42": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "ReferenceType.Cache"
		},
		"43": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "ReferenceType.File"
		},
		"44": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "default"
		},
		"45": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "default.__constructor"
		},
		"46": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "default"
		},
		"47": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "options"
		},
		"48": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "default.options"
		},
		"49": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "default.data"
		},
		"50": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "default.size"
		},
		"51": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "default.set"
		},
		"52": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "default.set"
		},
		"53": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "key"
		},
		"54": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "value"
		},
		"55": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "file"
		},
		"56": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "default.get"
		},
		"57": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "default.get"
		},
		"58": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "key"
		},
		"59": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "file"
		},
		"60": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "default.delete"
		},
		"61": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "default.delete"
		},
		"62": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "key"
		},
		"63": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "file"
		},
		"64": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "default.clear"
		},
		"65": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "default.clear"
		},
		"66": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "file"
		},
		"67": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "default.has"
		},
		"68": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "default.has"
		},
		"69": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "key"
		},
		"70": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "file"
		},
		"71": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "default.clearAll"
		},
		"72": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "default.clearAll"
		},
		"73": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "default.replace"
		},
		"74": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "default.replace"
		},
		"75": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "file"
		},
		"76": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "data"
		},
		"77": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "default.toJSON"
		},
		"78": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "default.toJSON"
		},
		"79": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "file"
		},
		"80": {
			"sourceFileName": "node_modules/typescript/lib/lib.es2019.object.d.ts",
			"qualifiedName": "__type"
		},
		"81": {
			"sourceFileName": "node_modules/typescript/lib/lib.es2019.object.d.ts",
			"qualifiedName": "__type.__index"
		},
		"83": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "default.getFileCache"
		},
		"84": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "default.getFileCache"
		},
		"85": {
			"sourceFileName": "lib/KeyValue/src/cache.ts",
			"qualifiedName": "file"
		},
		"86": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default"
		},
		"87": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.emptyData"
		},
		"88": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.emptyData"
		},
		"89": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.__constructor"
		},
		"90": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default"
		},
		"91": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "data"
		},
		"92": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.file"
		},
		"93": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.key"
		},
		"94": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.value"
		},
		"95": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.ttl"
		},
		"96": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.type"
		},
		"97": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.#getType"
		},
		"98": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.#getType"
		},
		"99": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "value"
		},
		"100": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.#parseValue"
		},
		"101": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.#parseValue"
		},
		"102": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "data"
		},
		"103": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.toJSON"
		},
		"104": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.toJSON"
		},
		"105": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.size"
		},
		"106": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.size"
		},
		"107": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default"
		},
		"108": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.__constructor"
		},
		"109": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default"
		},
		"110": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "path"
		},
		"111": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "maxSize"
		},
		"112": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "type"
		},
		"113": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.cache"
		},
		"114": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "__type"
		},
		"115": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "__type.file"
		},
		"116": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "__type.referenceFile"
		},
		"117": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.cacheSize"
		},
		"118": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.#path"
		},
		"119": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.files"
		},
		"120": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "__type"
		},
		"121": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "__type.name"
		},
		"122": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "__type.size"
		},
		"123": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "__type.writer"
		},
		"124": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.maxSize"
		},
		"125": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.type"
		},
		"126": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.#getReference"
		},
		"127": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.#getReference"
		},
		"128": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "__type"
		},
		"129": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "__type.file"
		},
		"130": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "__type.referenceFile"
		},
		"131": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.getReference"
		},
		"132": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.getReference"
		},
		"133": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "__type"
		},
		"134": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "__type.file"
		},
		"135": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "__type.referenceFile"
		},
		"136": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.#saveReference"
		},
		"137": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.#saveReference"
		},
		"138": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "key"
		},
		"139": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "file"
		},
		"140": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.#currentFile"
		},
		"141": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.#currentFile"
		},
		"142": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "__type"
		},
		"143": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "__type.name"
		},
		"144": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "__type.size"
		},
		"145": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "__type.writer"
		},
		"146": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.#createFile"
		},
		"147": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.#createFile"
		},
		"148": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.setReference"
		},
		"149": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.setReference"
		},
		"150": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "key"
		},
		"151": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "file"
		},
		"152": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.deleteReference"
		},
		"153": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.deleteReference"
		},
		"154": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "key"
		},
		"155": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.#deleteReference"
		},
		"156": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.#deleteReference"
		},
		"157": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "key"
		},
		"158": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "file"
		},
		"159": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.#getFileReference"
		},
		"160": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.#getFileReference"
		},
		"161": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "file"
		},
		"162": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.clear"
		},
		"163": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.clear"
		},
		"164": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.open"
		},
		"165": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.open"
		},
		"166": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.restart"
		},
		"167": {
			"sourceFileName": "lib/KeyValue/src/referencer.ts",
			"qualifiedName": "default.restart"
		},
		"168": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default"
		},
		"169": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"170": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"171": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"172": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"173": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"174": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"175": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"176": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"177": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"178": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.on"
		},
		"179": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.on"
		},
		"180": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"181": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"182": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"183": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.listenerCount"
		},
		"184": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.listenerCount"
		},
		"185": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"186": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"187": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getEventListeners"
		},
		"188": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getEventListeners"
		},
		"189": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"190": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "name"
		},
		"191": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.setMaxListeners"
		},
		"192": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.setMaxListeners"
		},
		"193": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "n"
		},
		"194": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventTargets"
		},
		"195": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.errorMonitor"
		},
		"196": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.captureRejectionSymbol"
		},
		"197": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.captureRejections"
		},
		"198": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.defaultMaxListeners"
		},
		"199": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.__constructor"
		},
		"200": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default"
		},
		"201": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "options"
		},
		"202": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "db"
		},
		"203": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.options"
		},
		"204": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.db"
		},
		"205": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.paths"
		},
		"206": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__type"
		},
		"207": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__type.reference"
		},
		"208": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__type.log"
		},
		"209": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.files"
		},
		"210": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__type"
		},
		"211": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__type.name"
		},
		"212": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__type.size"
		},
		"213": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__type.writer"
		},
		"214": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.logHash"
		},
		"215": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#queue"
		},
		"216": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__object"
		},
		"217": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__object.set"
		},
		"218": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__object.delete"
		},
		"219": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#cache"
		},
		"220": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#queued"
		},
		"221": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__object"
		},
		"222": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__object.set"
		},
		"223": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__object.reference"
		},
		"224": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__object.delete"
		},
		"225": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#intervals"
		},
		"226": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__object"
		},
		"227": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__object.set"
		},
		"228": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__object.delete"
		},
		"229": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.referencer"
		},
		"230": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.readyAt"
		},
		"231": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.logData"
		},
		"232": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__type"
		},
		"233": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__type.writer"
		},
		"234": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__type.size"
		},
		"235": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__type.fullWriter"
		},
		"236": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.repairMode"
		},
		"237": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#initialize"
		},
		"238": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#initialize"
		},
		"239": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#checkIntegrity"
		},
		"240": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#checkIntegrity"
		},
		"241": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#syncWithLogs"
		},
		"242": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#syncWithLogs"
		},
		"243": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#getHashLog"
		},
		"244": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#getHashLog"
		},
		"245": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#wal"
		},
		"246": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#wal"
		},
		"247": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "data"
		},
		"248": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "method"
		},
		"249": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#set"
		},
		"250": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#set"
		},
		"251": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#getCurrentFile"
		},
		"252": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#getCurrentFile"
		},
		"253": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#createNewFile"
		},
		"254": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#createNewFile"
		},
		"255": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.set"
		},
		"256": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.set"
		},
		"257": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "key"
		},
		"258": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "value"
		},
		"259": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#fileSize"
		},
		"260": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#fileSize"
		},
		"261": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "file"
		},
		"262": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.getLogs"
		},
		"263": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.getLogs"
		},
		"264": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__type"
		},
		"265": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__type.key"
		},
		"266": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__type.value"
		},
		"267": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__type.type"
		},
		"268": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__type.ttl"
		},
		"269": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__type.method"
		},
		"270": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.queue"
		},
		"271": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.queue"
		},
		"272": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__object"
		},
		"273": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__object.set"
		},
		"274": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__object.delete"
		},
		"275": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.get"
		},
		"276": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.get"
		},
		"277": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "key"
		},
		"278": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#get"
		},
		"279": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#get"
		},
		"280": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "key"
		},
		"281": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "file"
		},
		"282": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.delete"
		},
		"283": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.delete"
		},
		"284": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "key"
		},
		"285": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#delete"
		},
		"286": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#delete"
		},
		"287": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "key"
		},
		"288": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "file"
		},
		"289": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#deleteFlush"
		},
		"290": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#deleteFlush"
		},
		"291": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.clear"
		},
		"292": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.clear"
		},
		"293": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.has"
		},
		"294": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.has"
		},
		"295": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "key"
		},
		"296": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#fetchFile"
		},
		"297": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.#fetchFile"
		},
		"298": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "file"
		},
		"299": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.findOne"
		},
		"300": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.findOne"
		},
		"301": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "query"
		},
		"302": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__type"
		},
		"303": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__type"
		},
		"304": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "value"
		},
		"305": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "index"
		},
		"306": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.findMany"
		},
		"307": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.findMany"
		},
		"308": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "query"
		},
		"309": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__type"
		},
		"310": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__type"
		},
		"311": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "value"
		},
		"312": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "index"
		},
		"313": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.all"
		},
		"314": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.all"
		},
		"315": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "query"
		},
		"316": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__type"
		},
		"317": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__type"
		},
		"318": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "value"
		},
		"319": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "index"
		},
		"320": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "limit"
		},
		"321": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.fullRepair"
		},
		"322": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.fullRepair"
		},
		"323": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.deleteMany"
		},
		"324": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "default.deleteMany"
		},
		"325": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "query"
		},
		"326": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__type"
		},
		"327": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "__type"
		},
		"328": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "value"
		},
		"329": {
			"sourceFileName": "lib/KeyValue/src/table.ts",
			"qualifiedName": "index"
		},
		"330": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.addListener"
		},
		"331": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.addListener"
		},
		"332": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"333": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"334": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"335": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"336": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"337": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.on"
		},
		"338": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.on"
		},
		"339": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"340": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"341": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"342": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"343": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"344": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.once"
		},
		"345": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.once"
		},
		"346": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"347": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"348": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"349": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"350": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"351": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeListener"
		},
		"352": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeListener"
		},
		"353": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"354": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"355": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"356": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"357": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"358": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.off"
		},
		"359": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.off"
		},
		"360": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"361": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"362": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"363": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"364": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"365": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeAllListeners"
		},
		"366": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeAllListeners"
		},
		"367": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "event"
		},
		"368": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.setMaxListeners"
		},
		"369": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.setMaxListeners"
		},
		"370": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "n"
		},
		"371": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.getMaxListeners"
		},
		"372": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.getMaxListeners"
		},
		"373": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listeners"
		},
		"374": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listeners"
		},
		"375": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"376": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.rawListeners"
		},
		"377": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.rawListeners"
		},
		"378": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"379": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.emit"
		},
		"380": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.emit"
		},
		"381": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"382": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"383": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listenerCount"
		},
		"384": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listenerCount"
		},
		"385": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"386": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"387": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependListener"
		},
		"388": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependListener"
		},
		"389": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"390": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"391": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"392": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"393": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"394": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependOnceListener"
		},
		"395": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependOnceListener"
		},
		"396": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"397": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"398": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"399": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"400": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"401": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.eventNames"
		},
		"402": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.eventNames"
		},
		"403": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default"
		},
		"404": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.defaultOptions"
		},
		"405": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.defaultOptions"
		},
		"406": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"407": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"408": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"409": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"410": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"411": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"412": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"413": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"414": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"415": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.on"
		},
		"416": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.on"
		},
		"417": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"418": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"419": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"420": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.listenerCount"
		},
		"421": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.listenerCount"
		},
		"422": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"423": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"424": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getEventListeners"
		},
		"425": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getEventListeners"
		},
		"426": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"427": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "name"
		},
		"428": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.setMaxListeners"
		},
		"429": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.setMaxListeners"
		},
		"430": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "n"
		},
		"431": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventTargets"
		},
		"432": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.errorMonitor"
		},
		"433": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.captureRejectionSymbol"
		},
		"434": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.captureRejections"
		},
		"435": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.defaultMaxListeners"
		},
		"436": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.__constructor"
		},
		"437": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default"
		},
		"438": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "options"
		},
		"439": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.#options"
		},
		"440": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.tables"
		},
		"441": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "__type"
		},
		"442": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "__type.table"
		},
		"443": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "__type.ready"
		},
		"444": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.readyAt"
		},
		"445": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.#finalizeOptions"
		},
		"446": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.#finalizeOptions"
		},
		"447": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "options"
		},
		"448": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.connect"
		},
		"449": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.connect"
		},
		"450": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.options"
		},
		"451": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.options"
		},
		"452": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.set"
		},
		"453": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.set"
		},
		"454": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "table"
		},
		"455": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "key"
		},
		"456": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "value"
		},
		"457": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.get"
		},
		"458": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.get"
		},
		"459": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "table"
		},
		"460": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "key"
		},
		"461": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.delete"
		},
		"462": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.delete"
		},
		"463": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "table"
		},
		"464": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "key"
		},
		"465": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.clear"
		},
		"466": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.clear"
		},
		"467": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "table"
		},
		"468": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.has"
		},
		"469": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.has"
		},
		"470": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "table"
		},
		"471": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "key"
		},
		"472": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.clearAll"
		},
		"473": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.clearAll"
		},
		"474": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.findOne"
		},
		"475": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.findOne"
		},
		"476": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "table"
		},
		"477": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "query"
		},
		"478": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "__type"
		},
		"479": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "__type"
		},
		"480": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "value"
		},
		"481": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "index"
		},
		"482": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.findMany"
		},
		"483": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.findMany"
		},
		"484": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "table"
		},
		"485": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "query"
		},
		"486": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "__type"
		},
		"487": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "__type"
		},
		"488": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "value"
		},
		"489": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "index"
		},
		"490": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.all"
		},
		"491": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.all"
		},
		"492": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "table"
		},
		"493": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "query"
		},
		"494": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "__type"
		},
		"495": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "__type"
		},
		"496": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "value"
		},
		"497": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "index"
		},
		"498": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "limit"
		},
		"499": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.backup"
		},
		"500": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.backup"
		},
		"501": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.fullRepair"
		},
		"502": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.fullRepair"
		},
		"503": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "table"
		},
		"504": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.deleteMany"
		},
		"505": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.deleteMany"
		},
		"506": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "table"
		},
		"507": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "query"
		},
		"508": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "__type"
		},
		"509": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "__type"
		},
		"510": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "value"
		},
		"511": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "index"
		},
		"512": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.addListener"
		},
		"513": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.addListener"
		},
		"514": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"515": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"516": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"517": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"518": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"519": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.on"
		},
		"520": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.on"
		},
		"521": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"522": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"523": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"524": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"525": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"526": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.once"
		},
		"527": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.once"
		},
		"528": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"529": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"530": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"531": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"532": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"533": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeListener"
		},
		"534": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeListener"
		},
		"535": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"536": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"537": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"538": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"539": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"540": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.off"
		},
		"541": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.off"
		},
		"542": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"543": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"544": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"545": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"546": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"547": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeAllListeners"
		},
		"548": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeAllListeners"
		},
		"549": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "event"
		},
		"550": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.setMaxListeners"
		},
		"551": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.setMaxListeners"
		},
		"552": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "n"
		},
		"553": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.getMaxListeners"
		},
		"554": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.getMaxListeners"
		},
		"555": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listeners"
		},
		"556": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listeners"
		},
		"557": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"558": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.rawListeners"
		},
		"559": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.rawListeners"
		},
		"560": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"561": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.emit"
		},
		"562": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.emit"
		},
		"563": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"564": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"565": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listenerCount"
		},
		"566": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listenerCount"
		},
		"567": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"568": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"569": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependListener"
		},
		"570": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependListener"
		},
		"571": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"572": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"573": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"574": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"575": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"576": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependOnceListener"
		},
		"577": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependOnceListener"
		},
		"578": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"579": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"580": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"581": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"582": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"583": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.eventNames"
		},
		"584": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.eventNames"
		},
		"585": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueOptions"
		},
		"586": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueOptions.dataConfig"
		},
		"587": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueOptions.fileConfig"
		},
		"588": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueOptions.encryptionConfig"
		},
		"589": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueOptions.cacheConfig"
		},
		"590": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueDataConfig"
		},
		"591": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueDataConfig.path"
		},
		"592": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueDataConfig.tables"
		},
		"593": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueDataConfig.referencePath"
		},
		"594": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueFileConfig"
		},
		"595": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueFileConfig.extension"
		},
		"596": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueFileConfig.transactionLogPath"
		},
		"597": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueFileConfig.maxSize"
		},
		"598": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueEncryptionConfig"
		},
		"599": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueEncryptionConfig.securityKey"
		},
		"600": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueEncryptionConfig.encriptData"
		},
		"601": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueCacheConfig"
		},
		"602": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueCacheConfig.cache"
		},
		"603": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueCacheConfig.reference"
		},
		"604": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueCacheConfig.limit"
		},
		"605": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueCacheConfig.sorted"
		},
		"606": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueCacheConfig.sortFunction"
		},
		"607": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "__type"
		},
		"608": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "__type"
		},
		"609": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "a"
		},
		"610": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "b"
		},
		"611": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueTableOptions"
		},
		"612": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueTableOptions.name"
		},
		"613": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueDataInterface"
		},
		"614": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueDataInterface.file"
		},
		"615": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueDataInterface.value"
		},
		"616": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueDataInterface.key"
		},
		"617": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueDataInterface.ttl"
		},
		"618": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueDataInterface.type"
		},
		"619": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueJSONOption"
		},
		"620": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueJSONOption.value"
		},
		"621": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueJSONOption.key"
		},
		"622": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueJSONOption.ttl"
		},
		"623": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueJSONOption.type"
		},
		"624": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "CacherOptions"
		},
		"625": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "CacherOptions.cache"
		},
		"626": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "CacherOptions.limit"
		},
		"627": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "CacherOptions.sorted"
		},
		"628": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "CacherOptions.sortFunction"
		},
		"629": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "__type"
		},
		"630": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "__type"
		},
		"631": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "a"
		},
		"632": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "b"
		},
		"633": {
			"sourceFileName": "lib/KeyValue/typings/type.ts",
			"qualifiedName": "DeepRequired"
		},
		"634": {
			"sourceFileName": "lib/KeyValue/typings/type.ts",
			"qualifiedName": "T"
		},
		"635": {
			"sourceFileName": "lib/KeyValue/typings/type.ts",
			"qualifiedName": "KeyValueDataValueType"
		},
		"636": {
			"sourceFileName": "lib/KeyValue/typings/type.ts",
			"qualifiedName": "ValidJSON"
		},
		"637": {
			"sourceFileName": "lib/KeyValue/typings/type.ts",
			"qualifiedName": "__type"
		},
		"638": {
			"sourceFileName": "lib/KeyValue/typings/type.ts",
			"qualifiedName": "__type.__index"
		},
		"640": {
			"sourceFileName": "lib/KeyValue/typings/type.ts",
			"qualifiedName": "__type"
		},
		"641": {
			"sourceFileName": "lib/KeyValue/typings/type.ts",
			"qualifiedName": "__type.toJSON"
		},
		"642": {
			"sourceFileName": "lib/KeyValue/typings/type.ts",
			"qualifiedName": "__type.toJSON"
		},
		"643": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "encrypt"
		},
		"644": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "encrypt"
		},
		"645": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "string"
		},
		"646": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "key"
		},
		"647": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "iV"
		},
		"648": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "decrypt"
		},
		"649": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "decrypt"
		},
		"650": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "hash"
		},
		"651": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "key"
		},
		"652": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "createHashRawString"
		},
		"653": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "createHashRawString"
		},
		"654": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "strings"
		},
		"655": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "createHash"
		},
		"656": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "createHash"
		},
		"657": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "string"
		},
		"658": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "key"
		},
		"659": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "iv"
		},
		"660": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "decodeHash"
		},
		"661": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "decodeHash"
		},
		"662": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "hash"
		},
		"663": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "key"
		},
		"664": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "iv"
		},
		"665": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "JSONParser"
		},
		"666": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "JSONParser"
		},
		"667": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "data"
		},
		"668": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "__object"
		},
		"669": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "__object.data"
		},
		"670": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "__object.isBroken"
		},
		"671": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "ReferenceConstantSpace"
		}
	}
}